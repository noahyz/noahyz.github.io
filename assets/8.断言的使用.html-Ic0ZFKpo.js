import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as r,o as s}from"./app-D1zlwylF.js";const o={};function n(i,e){return s(),a("div",null,e[0]||(e[0]=[r('<h2 id="断言的使用" tabindex="-1"><a class="header-anchor" href="#断言的使用"><span>断言的使用</span></a></h2><p>断言可以先计算表达式的真假，如果其值为假（即为 0），那么他先向 stderr 输出一条错误，然后调用 abort 终止程序运行。</p><p>断言分为：静态断言和动态断言。也即：编译期断言和运行期断言。</p><h3 id="一、编译期断言" tabindex="-1"><a class="header-anchor" href="#一、编译期断言"><span>一、编译期断言</span></a></h3><p><code>static_assert(expression, message)</code> 实现了编译器的断言，也叫静态断言。会调用 abort 终止程序的运行。</p><ul><li>如果第一个参数，常量表达式的值为 false，会产生一条编译错误</li><li>第二个参数就是错误提示字符串</li></ul><p>使用 <code>static_assert</code> 可以在编译期间发现更多的错误，用编译器来强制保证一些约定，尤其是用在模板的时候。而且编译期间的断言，不会生成目标代码，因此也不会造成任何运行期间的性能损失。</p><p>注意：<code>static_assert</code> 的断言表达式的结果必须是在编译时期可以计算的表达式，即是常量表达式。如果使用变量，则会导致错误。</p><h3 id="二、运行时断言" tabindex="-1"><a class="header-anchor" href="#二、运行时断言"><span>二、运行时断言</span></a></h3><p><code>assert</code> 是运行时断言，他用来发现运行期的错误，也就是说运行期间没有运行到的 <code>assert</code> 代码，是不会检测到的。对性能也有一定的影响。所以在发行版本中，assert 一般需要关掉。</p><p><code>assert(expression)</code> ，运行期的判断，并且会强制终止程序。</p>',11)]))}const l=t(o,[["render",n],["__file","8.断言的使用.html.vue"]]),d=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/8.%E6%96%AD%E8%A8%80%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"8.断言的使用","lang":"zh-CN","frontmatter":{"title":"8.断言的使用","description":"断言的使用 断言可以先计算表达式的真假，如果其值为假（即为 0），那么他先向 stderr 输出一条错误，然后调用 abort 终止程序运行。 断言分为：静态断言和动态断言。也即：编译期断言和运行期断言。 一、编译期断言 static_assert(expression, message) 实现了编译器的断言，也叫静态断言。会调用 abort 终止程序...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/8.%E6%96%AD%E8%A8%80%E7%9A%84%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"8.断言的使用"}],["meta",{"property":"og:description","content":"断言的使用 断言可以先计算表达式的真假，如果其值为假（即为 0），那么他先向 stderr 输出一条错误，然后调用 abort 终止程序运行。 断言分为：静态断言和动态断言。也即：编译期断言和运行期断言。 一、编译期断言 static_assert(expression, message) 实现了编译器的断言，也叫静态断言。会调用 abort 终止程序..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8.断言的使用\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"断言的使用","slug":"断言的使用","link":"#断言的使用","children":[{"level":3,"title":"一、编译期断言","slug":"一、编译期断言","link":"#一、编译期断言","children":[]},{"level":3,"title":"二、运行时断言","slug":"二、运行时断言","link":"#二、运行时断言","children":[]}]}],"git":{},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"编程语言/c++语言/基础语法/8.断言的使用.md","excerpt":"<h2>断言的使用</h2>\\n<p>断言可以先计算表达式的真假，如果其值为假（即为 0），那么他先向 stderr 输出一条错误，然后调用 abort 终止程序运行。</p>\\n<p>断言分为：静态断言和动态断言。也即：编译期断言和运行期断言。</p>\\n<h3>一、编译期断言</h3>\\n<p><code>static_assert(expression, message)</code> 实现了编译器的断言，也叫静态断言。会调用 abort 终止程序的运行。</p>\\n<ul>\\n<li>如果第一个参数，常量表达式的值为 false，会产生一条编译错误</li>\\n<li>第二个参数就是错误提示字符串</li>\\n</ul>","autoDesc":true}');export{l as comp,d as data};
