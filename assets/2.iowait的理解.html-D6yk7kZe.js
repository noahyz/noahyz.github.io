import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a,o}from"./app-D1zlwylF.js";const n={};function s(r,i){return o(),t("div",null,i[0]||(i[0]=[a('<h3 id="一、什么是-iowait" tabindex="-1"><a class="header-anchor" href="#一、什么是-iowait"><span>一、什么是 iowait</span></a></h3><p>来自 linux 中的解释</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Show the percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I/O request.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>iowait 指在一个采样周期内有百分之几的时间是属于以下情况：CPU处于空闲状态并且至少有一个未完成的磁盘IO请求</strong></p><p>那么根据 iowait 的定义可知，iowait 是属于 idle 的一个子类。可以把 iowait 当成一种等待 IO 而造成的 idle 状态。</p><h3 id="二、原理" tabindex="-1"><a class="header-anchor" href="#二、原理"><span>二、原理</span></a></h3><p>在内核中，<code>user, sys, idle, iowait</code> 四种状态，每个状态都有一个计数器，负责一个采样周期内统计每个状态的计数，最后计算每个计数器占总计数的百分比，结果就是每个状态所占的百分比。</p><p>也就是说，当发生时钟中断的时候，内核会检查 CPU 当前的状态，如果 CPU 正在执行内核空间的指令，则 sys 的计数器加 1 ，如果是用户空间的指令，则 user 的计数器加 1。如果 CPU 此时处于 idle 状态，内核会检查：是否存在从该 CPU 发起的一个未完成的本地磁盘、网络 IO 请求等条件。如果存在，则 iowait 的计数器加 1，如果都没有，则 idle 的计数器加 1。</p><p>Linux 系统时钟频率是一个常数 HZ，通常 HZ 为 100，一秒振动 100 次。也就是说，每 10ms 进行一次中断。计数器在每次时钟中断时进行计数，所以用每种状态的计数器的增量值除以总间隔时钟数，就能得到每种状态所占时间的百分比。</p><h3 id="三、iowait-常见的误解" tabindex="-1"><a class="header-anchor" href="#三、iowait-常见的误解"><span>三、iowait 常见的误解</span></a></h3><h4 id="_1-iowait-高不代表-io-存在瓶颈" tabindex="-1"><a class="header-anchor" href="#_1-iowait-高不代表-io-存在瓶颈"><span>1. iowait 高不代表 IO 存在瓶颈</span></a></h4><p><a href="https://blog.csdn.net/fengye_csdn/article/details/124092138" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/fengye_csdn/article/details/124092138</a></p>',12)]))}const d=e(n,[["render",s],["__file","2.iowait的理解.html.vue"]]),p=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/2.iowait%E7%9A%84%E7%90%86%E8%A7%A3.html","title":"2.iowait的理解","lang":"zh-CN","frontmatter":{"title":"2.iowait的理解","description":"一、什么是 iowait 来自 linux 中的解释 iowait 指在一个采样周期内有百分之几的时间是属于以下情况：CPU处于空闲状态并且至少有一个未完成的磁盘IO请求 那么根据 iowait 的定义可知，iowait 是属于 idle 的一个子类。可以把 iowait 当成一种等待 IO 而造成的 idle 状态。 二、原理 在内核中，user, ...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/2.iowait%E7%9A%84%E7%90%86%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"2.iowait的理解"}],["meta",{"property":"og:description","content":"一、什么是 iowait 来自 linux 中的解释 iowait 指在一个采样周期内有百分之几的时间是属于以下情况：CPU处于空闲状态并且至少有一个未完成的磁盘IO请求 那么根据 iowait 的定义可知，iowait 是属于 idle 的一个子类。可以把 iowait 当成一种等待 IO 而造成的 idle 状态。 二、原理 在内核中，user, ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.iowait的理解\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"一、什么是 iowait","slug":"一、什么是-iowait","link":"#一、什么是-iowait","children":[]},{"level":3,"title":"二、原理","slug":"二、原理","link":"#二、原理","children":[]},{"level":3,"title":"三、iowait 常见的误解","slug":"三、iowait-常见的误解","link":"#三、iowait-常见的误解","children":[]}],"git":{},"readingTime":{"minutes":1.48,"words":443},"filePathRelative":"操作系统/文件管理/内核原理/2.iowait的理解.md","excerpt":"<h3>一、什么是 iowait</h3>\\n<p>来自 linux 中的解释</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>Show the percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I/O request.</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,p as data};
