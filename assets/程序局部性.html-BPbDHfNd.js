import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as t,d as n,o as r}from"./app-D1zlwylF.js";const a={};function i(p,e){return r(),l("div",null,e[0]||(e[0]=[t("h3",{id:"谈谈程序局部性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#谈谈程序局部性"},[t("span",null,"谈谈程序局部性")])],-1),t("p",null,"程序局部性包括时间局部性和空间局部性。",-1),t("ul",null,[t("li",null,"时间局部性是指被访问过一次的内存位置很可能在不远的将来会被再次访问"),t("li",null,"空间局部性是指如果一个内存位置被引用过，那么他邻近的位置在不远的将来也有很大概率会被访问")],-1),t("p",null,"利用局部性原理，人们设计了缓存，把可能会被访问到的少量数据放在缓存中，这样就大大加速了 CPU 访问内存的速度。虚拟内存的页缓存也是基于同样的原理，未来最有可能会被访问的页面会被保留在物理内存中。所以在多级存储结构中，当访问者和被访问者之间的速度不匹配时，就是缓存能够发挥作用的场景。",-1),t("p",null,[n("基于同样的原理的，还有内容传递网络（"),t("code",null,"Content Delivery Network, CDN"),n("）。缓存的思想是普遍而广泛的。")],-1)]))}const s=o(a,[["render",i],["__file","程序局部性.html.vue"]]),h=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/%E7%A8%8B%E5%BA%8F%E5%B1%80%E9%83%A8%E6%80%A7.html","title":"程序局部性","lang":"zh-CN","frontmatter":{"title":"程序局部性","description":"谈谈程序局部性 程序局部性包括时间局部性和空间局部性。 时间局部性是指被访问过一次的内存位置很可能在不远的将来会被再次访问 空间局部性是指如果一个内存位置被引用过，那么他邻近的位置在不远的将来也有很大概率会被访问 利用局部性原理，人们设计了缓存，把可能会被访问到的少量数据放在缓存中，这样就大大加速了 CPU 访问内存的速度。虚拟内存的页缓存也是基于同样...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/%E7%A8%8B%E5%BA%8F%E5%B1%80%E9%83%A8%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"程序局部性"}],["meta",{"property":"og:description","content":"谈谈程序局部性 程序局部性包括时间局部性和空间局部性。 时间局部性是指被访问过一次的内存位置很可能在不远的将来会被再次访问 空间局部性是指如果一个内存位置被引用过，那么他邻近的位置在不远的将来也有很大概率会被访问 利用局部性原理，人们设计了缓存，把可能会被访问到的少量数据放在缓存中，这样就大大加速了 CPU 访问内存的速度。虚拟内存的页缓存也是基于同样..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"程序局部性\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"谈谈程序局部性","slug":"谈谈程序局部性","link":"#谈谈程序局部性","children":[]}],"git":{},"readingTime":{"minutes":0.89,"words":268},"filePathRelative":"操作系统/内存管理/内核原理/程序局部性.md","excerpt":"<h3>谈谈程序局部性</h3>\\n<p>程序局部性包括时间局部性和空间局部性。</p>\\n<ul>\\n<li>时间局部性是指被访问过一次的内存位置很可能在不远的将来会被再次访问</li>\\n<li>空间局部性是指如果一个内存位置被引用过，那么他邻近的位置在不远的将来也有很大概率会被访问</li>\\n</ul>\\n<p>利用局部性原理，人们设计了缓存，把可能会被访问到的少量数据放在缓存中，这样就大大加速了 CPU 访问内存的速度。虚拟内存的页缓存也是基于同样的原理，未来最有可能会被访问的页面会被保留在物理内存中。所以在多级存储结构中，当访问者和被访问者之间的速度不匹配时，就是缓存能够发挥作用的场景。</p>","autoDesc":true}');export{s as comp,h as data};
