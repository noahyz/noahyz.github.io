import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-D1zlwylF.js";const t={};function e(h,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h3 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述"><span>问题描述</span></a></h3><p>c++的STL使用范围比较广泛，拿vector举一个例子，vector中可以存储对象也可以存储指针，那存储对象和存储指针分别有什么优缺点呢？</p><h3 id="问题分析" tabindex="-1"><a class="header-anchor" href="#问题分析"><span>问题分析</span></a></h3><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;vector&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> TestObj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    explicit</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> TestObj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(data) {} </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">private:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    TestObj </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">TestObj</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> vec;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    vec</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">push_back</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(obj);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;origin TestObj address: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::endl;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;">    std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::cout </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;Address of vector: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> &lt;&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">vec</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::endl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>origin TestObj address: 0x7ffc0198678c</span></span>
<span class="line"><span>Address of vector: 0x1472c20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>再向vector中push_back或者insert元素的时候，容器会拷贝一份对象进行存储</p><p>对于内建类型，比如int、double等是进行位拷贝，自定义类型的数据会调用类的拷贝构造函数。如果一个类的拷贝构造函数很耗时，很容易造成程序的性能瓶颈。</p><p>对于存放基类对象的容器，如果向容器中插入子类的对象，那么子类特有的那些内容就会被无情的剥离，可能造成严重的BUG。推荐存放指针。</p><p>对于存放指针的容器，也是推荐存放智能指针，不用程序员来管理指针指向的内存的释放工作，避免出现问题。</p><h3 id="问题总结" tabindex="-1"><a class="header-anchor" href="#问题总结"><span>问题总结</span></a></h3><p>推荐容器中存放智能指针，效率高，同时也避免了手动管理内存带来的问题</p><p>对于存放基类的容器，使用指针解决派生类对象的剥离问题</p>`,12)]))}const d=i(t,[["render",e],["__file","6.STL容器存放对象还是指针.html.vue"]]),r=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/6.STL%E5%AE%B9%E5%99%A8%E5%AD%98%E6%94%BE%E5%AF%B9%E8%B1%A1%E8%BF%98%E6%98%AF%E6%8C%87%E9%92%88.html","title":"7.STL容器使用姿势--存储对象还是指针","lang":"zh-CN","frontmatter":{"title":"7.STL容器使用姿势--存储对象还是指针","date":"2021-10-16T16:19:17.000Z","categories":["编程语言"],"tags":["stl"],"description":"问题描述 c++的STL使用范围比较广泛，拿vector举一个例子，vector中可以存储对象也可以存储指针，那存储对象和存储指针分别有什么优缺点呢？ 问题分析 再向vector中push_back或者insert元素的时候，容器会拷贝一份对象进行存储 对于内建类型，比如int、double等是进行位拷贝，自定义类型的数据会调用类的拷贝构造函数。如果一...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/6.STL%E5%AE%B9%E5%99%A8%E5%AD%98%E6%94%BE%E5%AF%B9%E8%B1%A1%E8%BF%98%E6%98%AF%E6%8C%87%E9%92%88.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"7.STL容器使用姿势--存储对象还是指针"}],["meta",{"property":"og:description","content":"问题描述 c++的STL使用范围比较广泛，拿vector举一个例子，vector中可以存储对象也可以存储指针，那存储对象和存储指针分别有什么优缺点呢？ 问题分析 再向vector中push_back或者insert元素的时候，容器会拷贝一份对象进行存储 对于内建类型，比如int、double等是进行位拷贝，自定义类型的数据会调用类的拷贝构造函数。如果一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"stl"}],["meta",{"property":"article:published_time","content":"2021-10-16T16:19:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7.STL容器使用姿势--存储对象还是指针\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-16T16:19:17.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":3,"title":"问题分析","slug":"问题分析","link":"#问题分析","children":[]},{"level":3,"title":"问题总结","slug":"问题总结","link":"#问题总结","children":[]}],"git":{},"readingTime":{"minutes":1.32,"words":396},"filePathRelative":"编程语言/c++语言/编码技巧/6.STL容器存放对象还是指针.md","localizedDate":"2021年10月17日","excerpt":"<h3>问题描述</h3>\\n<p>c++的STL使用范围比较广泛，拿vector举一个例子，vector中可以存储对象也可以存储指针，那存储对象和存储指针分别有什么优缺点呢？</p>\\n<h3>问题分析</h3>\\n<div class=\\"language-c++ line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"c++\\" data-title=\\"c++\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> &lt;vector&gt;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> &lt;iostream&gt;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">class</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\\"> TestObj</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">public:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">    explicit</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> TestObj</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">int</span><span style=\\"--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\"> data</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">) : </span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">data</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(data) {} </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">private:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">    int</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\"> data;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">};</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">int</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> main</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">    TestObj </span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">obj</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">10</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#ABB2BF\\">    std</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">::vector</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">&lt;</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">TestObj</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">&gt;</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\"> vec;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">    vec</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">push_back</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(obj);</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#ABB2BF\\">    std</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">::cout </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">&lt;&lt;</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> \\"origin TestObj address: \\"</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\"> &lt;&lt;</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\"> &amp;</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">obj </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">&lt;&lt;</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#ABB2BF\\"> std</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">::endl;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#ABB2BF\\">    std</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">::cout </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">&lt;&lt;</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> \\"Address of vector: \\"</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\"> &lt;&lt;</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#56B6C2\\"> &amp;</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E5C07B\\">vec</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">[</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">0</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">] </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">&lt;&lt;</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#ABB2BF\\"> std</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">::endl;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> 0</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
