import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as n}from"./app-D1zlwylF.js";const l={};function t(p,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h2 id="一、平均负载概念" tabindex="-1"><a class="header-anchor" href="#一、平均负载概念"><span>一、平均负载概念</span></a></h2><h3 id="_1-uptime命令" tabindex="-1"><a class="header-anchor" href="#_1-uptime命令"><span>1. uptime命令</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">root@9-134-239-95:~#</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> uptime</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 22:52:30</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 265</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> days,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 12:54,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> user,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  load</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> average:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 0.03,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 0.06,</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0.05</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>命令返回：</p><ul><li><code>22:52:30</code> 表示当前时间</li><li><code>up 265 days, 12:54</code> 表示系统运行时间</li><li><code>1 user</code> 表示系统正在登录的用户数</li><li><code>load average: 0.03, 0.06, 0.05</code> 表示过去1分钟、5分钟、15分钟的平均负载</li></ul><h3 id="_2-平均负载" tabindex="-1"><a class="header-anchor" href="#_2-平均负载"><span>2. 平均负载</span></a></h3><p>平均负载是指单位时间内，系统处于可运行状态和不可中断状态的平均进程数，也就是平均活跃进程数，它和 CPU 使用率并没有直接关系。</p><ul><li>可运行状态的进程：是指正在使用 CPU 或者正在等待 CPU 的进程，也就是我们常用 ps 命令看到的，处于 R 状态（Running 或 Runnable）的进程。</li><li>不可中断状态的进程则是正处于内核态关键流程中的进程，并且这些流程是不可打断的，比如最常见的是等待硬件设备的 I/O 响应，也就是我们在 ps 命令中看到的 D 状态（Uninterruptible Sleep，也称为 Disk Sleep）的进程。</li></ul><p>小总结：平均负载就是平均活跃进程数。那么最理想的情况是一个CPU运行一个进程，CPU被充分利用。比如平均负载为2，在1个CPU的机器上，意味着一半进程竞争不到CPU；在2个CPU的机器上，意味着所有CPU刚好被完全占有；在4个CPU的机器上，意味着CPU有50%的空闲。</p><ul><li>如果最近1分钟、5分钟、15分钟的三个值基本相同，那就说明负载很平稳</li><li>如果最近1分钟远小于15分钟的值，说明最近1分钟的负载在降低，过去15分钟的负载稍高</li><li>如果最近1分钟远大于15分钟的值，说明负载在增加，如果平均负载接近或者超过CPU个数，意味着系统正在发生过载</li></ul><p>一般情况下，当平均负载超过CPU数量的70%时，就需要关注负载高的问题；一旦负载高，会导致进程响应变慢，进而影响服务的正常功能</p><h3 id="_3-区分平均负载和cpu使用率" tabindex="-1"><a class="header-anchor" href="#_3-区分平均负载和cpu使用率"><span>3. 区分平均负载和CPU使用率</span></a></h3><p>平均负载：单位时间内，系统处于可运行状态和不可中断状态的平均进程数；所以，它不仅包括了正在使用 CPU 的进程，还包括等待 CPU 和等待 I/O 的进程。<br> CPU使用率：单位时间内，CPU的繁忙情况统计，和平均负载不一定完全对应</p><p>比如如下情况：</p><ol><li>CPU密集型进程，使用大量CPU会使平均负载升高，此时两者是一致的</li><li>I/O密集型进程，等待I/O会导致平均负载升高，但CPU使用率不一定很高</li><li>大量等待CPU的进程调度也会导致平均负载升高，此时CPU的使用率也会比较高</li></ol><h2 id="二、平均负载分析场景" tabindex="-1"><a class="header-anchor" href="#二、平均负载分析场景"><span>二、平均负载分析场景</span></a></h2><ul><li>stress 是一个 linux 系统压力测试工具</li><li>sysstat 包含了 linux 常用的性能工具，用来监控和分析系统的性能，比如 pidstat、mpstat</li></ul><h3 id="_1-cpu-密集型进程" tabindex="-1"><a class="header-anchor" href="#_1-cpu-密集型进程"><span>1. CPU 密集型进程</span></a></h3><ul><li><p>在第一个终端运行 stress 命令，模拟一个 CPU 使用率 100% 的场景</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>stress --cpu 1 --timeout 600</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>在第二个终端运行 uptime 命令查看平均负载的变化情况</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>// -d 参数高亮显示变化的区域</span></span>
<span class="line"><span>watch -d uptime</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在第三个终端运行 mpstat 查看 CPU 使用率的变化情况。可以看到 0 号 cpu 的使用率 100%，但它的 iowait 只有 0，说明平均负载升高是因为 CPU 使用率达到了 100%</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># -P ALL 表示监控所有CPU，后面数字5表示间隔5秒后输出一组数据</span></span>
<span class="line"><span>➜  [/root] mpstat -P ALL 5</span></span>
<span class="line"><span>Linux 3.10.107-1-tlinux2_kvm_guest-0054 (9-134-239-95)  06/04/2022      _x86_64_        (8 CPU)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>05:44:31 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle</span></span>
<span class="line"><span>05:44:36 PM  all   13.19    0.23    0.30    0.05    0.00    0.08    0.00    0.00    0.00   86.16</span></span>
<span class="line"><span>05:44:36 PM    0   99.60    0.00    0.00    0.00    0.00    0.40    0.00    0.00    0.00    0.00</span></span>
<span class="line"><span>05:44:36 PM    1    0.80    0.40    0.40    0.00    0.00    0.00    0.00    0.00    0.00   98.39</span></span>
<span class="line"><span>05:44:36 PM    2    0.80    0.20    0.40    0.20    0.00    0.00    0.00    0.00    0.00   98.40</span></span>
<span class="line"><span>05:44:36 PM    3    1.00    0.40    0.40    0.40    0.00    0.00    0.00    0.00    0.00   97.79</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>确定是那个进程导致了 CPU 使用率为 100%，使用 pidstat 来查看，可以看到 stress 进程的 CPU 使用率很高</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>➜  [/root] pidstat -u  5 1</span></span>
<span class="line"><span>06:04:39 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</span></span>
<span class="line"><span>06:04:44 PM     0     30590  100.00    0.00    0.00  100.00     6  stress</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-io-密集型进程" tabindex="-1"><a class="header-anchor" href="#_2-io-密集型进程"><span>2. IO 密集型进程</span></a></h4><ul><li><p>在第一个终端运行 stress 命令，模拟 IO 压力，即不停的执行 sync</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>stress -i 1 --timeout 600</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>在第二个终端执行 uptime 查看平均负载的变化</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>watch -d uptime</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>在第三个终端执行 mpstat 查看 CPU 使用率的情况。0 号 CPU 的内核态 CPU 时间占用 72.75%，磁盘 IO 等待时间 8.42% 。平均负载的升高是由于 iowait 的升高</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>➜  [/root] mpstat -P ALL 5 1</span></span>
<span class="line"><span>Linux 3.10.107-1-tlinux2_kvm_guest-0054 (9-134-239-95)  06/04/2022      _x86_64_        (8 CPU)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>06:17:25 PM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle</span></span>
<span class="line"><span>06:17:30 PM  all    0.68    0.23   10.61    1.86    0.00    0.10    0.00    0.00    0.00   86.52</span></span>
<span class="line"><span>06:17:30 PM    0    0.60    0.00   72.75    8.42    0.00    0.00    0.00    0.00    0.00   18.24</span></span>
<span class="line"><span>06:17:30 PM    1    0.40    0.40    7.03    6.02    0.00    0.40    0.00    0.00    0.00   85.74</span></span>
<span class="line"><span>06:17:30 PM    2    0.60    0.00    0.81    0.40    0.00    0.00    0.00    0.00    0.00   98.19</span></span>
<span class="line"><span>06:17:30 PM    3    1.00    0.20    2.00    0.00    0.00    0.20    0.00    0.00    0.00   96.61</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Average:     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle</span></span>
<span class="line"><span>Average:       0    0.47    0.07   73.25    9.01    0.00    0.13    0.00    0.00    0.00   17.08</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用 pidstat 查看，即可看到那个进程的 iowait 比较高。IO wait 导致的内核态 CPU 时间占用较高</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>➜  [/root] pidstat -u 3  3</span></span>
<span class="line"><span>06:26:34 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</span></span>
<span class="line"><span>06:26:37 PM     0      5318    0.00   76.67    0.00   76.67     0  stress</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_3-大量进程的场景" tabindex="-1"><a class="header-anchor" href="#_3-大量进程的场景"><span>3. 大量进程的场景</span></a></h4><p>当系统中运行进程超过 CPU 运行能力时，就会出现等待 CPU 的进程</p><ul><li><p>使用 stress 模拟多个进程，假如只有四个 CPU</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>// 模拟 8 个进程</span></span>
<span class="line"><span>stress -c 8 --timeout 600</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用 uptime 查看平均负载，使用 pidstat 查看进程的情况。8个进程在争抢 4 个 CPU，每个进程在用户空间占用的 CPU 只能到 50%</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>➜  [/root] pidstat -u 3  1</span></span>
<span class="line"><span>06:33:16 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</span></span>
<span class="line"><span>06:33:19 PM     0      9497   50.99    0.00    0.00   50.99     1  stress</span></span>
<span class="line"><span>06:33:19 PM     0      9498   49.67    0.00    0.00   49.67     3  stress</span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,24)]))}const h=i(l,[["render",t],["__file","2.平均负载.html.vue"]]),c=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/CPU%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/2.%E5%B9%B3%E5%9D%87%E8%B4%9F%E8%BD%BD.html","title":"2.平均负载","lang":"zh-CN","frontmatter":{"title":"2.平均负载","date":"2023-01-19T11:11:41.000Z","tags":["linux"],"description":"一、平均负载概念 1. uptime命令 命令返回： 22:52:30 表示当前时间 up 265 days, 12:54 表示系统运行时间 1 user 表示系统正在登录的用户数 load average: 0.03, 0.06, 0.05 表示过去1分钟、5分钟、15分钟的平均负载 2. 平均负载 平均负载是指单位时间内，系统处于可运行状态和不可中...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/CPU%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/2.%E5%B9%B3%E5%9D%87%E8%B4%9F%E8%BD%BD.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"2.平均负载"}],["meta",{"property":"og:description","content":"一、平均负载概念 1. uptime命令 命令返回： 22:52:30 表示当前时间 up 265 days, 12:54 表示系统运行时间 1 user 表示系统正在登录的用户数 load average: 0.03, 0.06, 0.05 表示过去1分钟、5分钟、15分钟的平均负载 2. 平均负载 平均负载是指单位时间内，系统处于可运行状态和不可中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:published_time","content":"2023-01-19T11:11:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.平均负载\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-19T11:11:41.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"一、平均负载概念","slug":"一、平均负载概念","link":"#一、平均负载概念","children":[{"level":3,"title":"1. uptime命令","slug":"_1-uptime命令","link":"#_1-uptime命令","children":[]},{"level":3,"title":"2. 平均负载","slug":"_2-平均负载","link":"#_2-平均负载","children":[]},{"level":3,"title":"3. 区分平均负载和CPU使用率","slug":"_3-区分平均负载和cpu使用率","link":"#_3-区分平均负载和cpu使用率","children":[]}]},{"level":2,"title":"二、平均负载分析场景","slug":"二、平均负载分析场景","link":"#二、平均负载分析场景","children":[{"level":3,"title":"1. CPU 密集型进程","slug":"_1-cpu-密集型进程","link":"#_1-cpu-密集型进程","children":[]}]}],"git":{},"readingTime":{"minutes":5.36,"words":1608},"filePathRelative":"操作系统/CPU管理/内核原理/2.平均负载.md","localizedDate":"2023年1月19日","excerpt":"<h2>一、平均负载概念</h2>\\n<h3>1. uptime命令</h3>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">root@9-134-239-95:~#</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> uptime</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> 22:52:30</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> up</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> 265</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> days,</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> 12:54,</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">  1</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> user,</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\">  load</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> average:</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> 0.03,</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> 0.06,</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> 0.05</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,c as data};
