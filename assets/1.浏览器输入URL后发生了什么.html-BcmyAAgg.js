import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as l,o as i}from"./app-D1zlwylF.js";const n="/assets/tcp%E9%80%9A%E4%BF%A1%E5%9B%BE%E7%A4%BA-K1xkRvRR.png",p={};function r(s,e){return i(),a("div",null,e[0]||(e[0]=[l('<h3 id="一、解析-url" tabindex="-1"><a class="header-anchor" href="#一、解析-url"><span>一、解析 URL</span></a></h3><p>首先，用户输入 URL 后浏览器根据输入的信息判断是进行 “搜索” 还是进行 “跳转网址”。如果是搜索内容，则将搜索内容加上默认的搜索引擎组合成新的 URL。如果用户输入的 URL 是合法网址，则直接跳转至输入的 URL 网址。</p><h3 id="二、dns-域名解析" tabindex="-1"><a class="header-anchor" href="#二、dns-域名解析"><span>二、DNS 域名解析</span></a></h3><p>浏览器通过 DNS 域名解析服务将输入的域名 解析为对应服务的 IP 地址，这样才能访问到域名指定的服务器。DNS 域名解析的过程如下：</p><h4 id="_1-本地-dns-服务器查询" tabindex="-1"><a class="header-anchor" href="#_1-本地-dns-服务器查询"><span>1. 本地 DNS 服务器查询</span></a></h4><p>客户端会依次在 浏览器缓存、本地 hosts 文件、本地 DNS 服务器缓存、本地 DNS 服务器 去查询域名，如果在任意一步查询到域名，直接返回域名对应的 IP 地址。</p><h4 id="_2-根域名服务器、顶级域名服务器、权威域名服务器" tabindex="-1"><a class="header-anchor" href="#_2-根域名服务器、顶级域名服务器、权威域名服务器"><span>2. 根域名服务器、顶级域名服务器、权威域名服务器</span></a></h4><p>如果在本地 DNS 服务器查询不到。那么本地 DNS 服务器则向上级域名服务器进行查询。查询过程为：</p><ul><li>首先本地 DNS 服务器向 根域名服务器 发起请求，根域名服务器是最高层次的，他只会返回 顶级域名服务器 的地址</li><li>然后本地 DNS 服务器拿到这个 顶级域名服务器 的地址后，向其发起请求，获取 权威域名服务器 的地址</li><li>最后本地 DNS 服务器通过 权威域名服务器，得到该域名对应的 IP 地址</li></ul><p>当本地 DNS 服务器获取到这个域名对应的 IP 地址后，会进行缓存到 本地 DNS 服务器缓存中。然后给客户端（浏览器），浏览器也会进行缓存。</p><p>需要注意的是，DNS 使用的 UDP 协议。</p><h3 id="三、tcp-连接" tabindex="-1"><a class="header-anchor" href="#三、tcp-连接"><span>三、TCP 连接</span></a></h3><p>接下来判断应用层协议，如果是 HTTPS 协议，则会在 HTTP 的基本上加上 SSL/TLS 协议，用于加密安全通信。</p><h4 id="_1-tcp三次握手连接" tabindex="-1"><a class="header-anchor" href="#_1-tcp三次握手连接"><span>1. TCP三次握手连接</span></a></h4><ul><li>第一次握手：客户端发送连接请求报文，将SYN位置为1，seq为X，然后客户端进入SYN_SEND状态，等待服务器的确认。</li><li>第二次握手：服务器收到客户端的SYN报文段，就知道这是一个要建立连接的请求，然后服务器也回复一个 SYN+ACK 的报文段，其中 seq 为 y，ACK 为 x+1，用于确认收到了第一次握手请求的信息。发送后服务端进入SYN_RECV状态。</li><li>第三次握手：客户端收到了服务器的 SYN+ACK 信息后，也返回一个ACK（ACK置为y+1）的确认报文。此后客户端和服务端都进入ESTABLISHED 状态，完成三次握手。</li></ul><h4 id="_2-ssl握手连接" tabindex="-1"><a class="header-anchor" href="#_2-ssl握手连接"><span>2. SSL握手连接</span></a></h4><ul><li>第一阶段 ：客户端向服务器发送握手请求，包括自己的 TLS 版本 和所支持的 加密方式列表 以供服务器选择，还有一个&quot;client random&quot; 随机数字符串</li><li>第二阶段 ：服务器对客户端进行回应，包括数字证书，服务器选择的 加密方式 和&quot;server random&quot; 随机数字符串</li><li>第三阶段 ：客户端对服务器发来的数字证书进行验证，确保对方的合法身份，验证过程具体为（1）检查数字签名（2）验证证书链（3）检查证书有效期（4）检查证书的撤回状态</li><li>第四阶段 ：客户端生成一个随机数字符串“pre_master”，然后将这个字符串经过服务器的公钥加密后，发送给服务器</li><li>第五阶段 ：服务器使用私钥解密这个随机数字符串“pre_master”。以上就是非对称加密的过程</li><li>第六阶段 ：那么此时，客户端和服务器均都有了相同的 client random、server random、pre_master，并使用相同的加密算法生成相同的对称密钥</li><li>第七阶段 : 客户端发送经过对称密钥加密过的 &quot;finished&quot; 信号</li><li>第八阶段 : 服务器发送经过对称密钥加密过的 &quot;finished&quot; 信号</li><li>第九阶段 ：握手完成，之后双方通信使用对称密钥 进行加密，保证了安全通信。</li></ul><h3 id="四、http-请求-服务器处理并返回请求" tabindex="-1"><a class="header-anchor" href="#四、http-请求-服务器处理并返回请求"><span>四、HTTP 请求，服务器处理并返回请求</span></a></h3><p>传输层连接建立后，浏览器就可以利用 HTTP/HTTPS 协议向服务器发送请求了。</p><p>HTTP 报文一般包括：请求行、请求头、请求体。</p><p>请求行：<code>GET / HTTP/1.1</code>，表示请求方法是 GET，路径为根路径，HTTP 协议版本为 1.1。</p><p>请求头，允许客户端向服务器传递请求的一些附加信息和客户端自身的信息。</p><p>最后是请求体，也就是请求正文。</p><p>服务器接收到请求后，进行解析请求头，如果头部有缓存相关信息，如：<code>if-none-match</code> 与 <code>if-modified-since</code>，服务器则会验证缓存是否有效，若有效则返回状态码为 304（表示自从上次请求后，请求的数据未修改过。服务器返回此响应时，不会返回数据内容）；若无效则重新返回资源，状态码为 200。</p><p>服务器返回的 HTTP 响应报文。一般包括：响应行、响应头、响应体。</p><p>响应行：<code>HTTP/1.1 200 OK</code>，表示 HTTP 协议版本，状态码和状态描述。</p><p>响应头：包含了服务器及其返回数据的一些信息，服务器生成数据的时间、返回的数据类型等待</p><p>响应体：服务器返回给浏览器的文本信息，通过是 HTML、CSS、JS、图片等文件</p><h3 id="五、浏览器解析并渲染页面" tabindex="-1"><a class="header-anchor" href="#五、浏览器解析并渲染页面"><span>五、浏览器解析并渲染页面</span></a></h3><p>浏览器拿到服务器返回的数据之后，进行构建 DOM 树、样式计算、布局阶段、分层、栅格化和显示等等步骤</p><h3 id="六、断开连接" tabindex="-1"><a class="header-anchor" href="#六、断开连接"><span>六、断开连接</span></a></h3><p>如果连接之间没有数据传输了，那么就需要断开连接。进入到 TCP 四次挥手的阶段。</p><ul><li>第一次挥手 ：客户端（也可以是服务器端）发送一个 FIN 报文段给服务器，然后客户端进入FIN_WAIT_1 状态</li><li>第二次挥手 ：服务器端收到了客户端发送的FIN报文段，向客户端回一个ACK确认报文，客户端进入FIN_WAIT_2状态</li><li>第三次挥手 : 服务器端向客户端发送 FIN 报文表示这是一个要关闭连接的请求，同时服务端进入 LAST_ACK 状态。</li><li>第四次挥手 ：客户端收到服务器端发送的FIN报文，向服务端发送ACK确认报文，然后客户端进入TIME_WAIT状态，服务端收到ACK确认报文后关闭连接，客户端等待 2MSL 时间（最大报文存活时间）后关闭连接。</li></ul><img src="'+n+'" style="zoom:33%;">',34)]))}const c=t(p,[["render",r],["__file","1.浏览器输入URL后发生了什么.html.vue"]]),E=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E5%BA%94%E7%94%A8%E5%B1%82/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/1.%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5URL%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88.html","title":"1.浏览器输入URL后发生了什么","lang":"zh-CN","frontmatter":{"title":"1.浏览器输入URL后发生了什么","description":"一、解析 URL 首先，用户输入 URL 后浏览器根据输入的信息判断是进行 “搜索” 还是进行 “跳转网址”。如果是搜索内容，则将搜索内容加上默认的搜索引擎组合成新的 URL。如果用户输入的 URL 是合法网址，则直接跳转至输入的 URL 网址。 二、DNS 域名解析 浏览器通过 DNS 域名解析服务将输入的域名 解析为对应服务的 IP 地址，这样才能...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E5%BA%94%E7%94%A8%E5%B1%82/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/1.%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5URL%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"1.浏览器输入URL后发生了什么"}],["meta",{"property":"og:description","content":"一、解析 URL 首先，用户输入 URL 后浏览器根据输入的信息判断是进行 “搜索” 还是进行 “跳转网址”。如果是搜索内容，则将搜索内容加上默认的搜索引擎组合成新的 URL。如果用户输入的 URL 是合法网址，则直接跳转至输入的 URL 网址。 二、DNS 域名解析 浏览器通过 DNS 域名解析服务将输入的域名 解析为对应服务的 IP 地址，这样才能..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.浏览器输入URL后发生了什么\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"一、解析 URL","slug":"一、解析-url","link":"#一、解析-url","children":[]},{"level":3,"title":"二、DNS 域名解析","slug":"二、dns-域名解析","link":"#二、dns-域名解析","children":[]},{"level":3,"title":"三、TCP 连接","slug":"三、tcp-连接","link":"#三、tcp-连接","children":[]},{"level":3,"title":"四、HTTP 请求，服务器处理并返回请求","slug":"四、http-请求-服务器处理并返回请求","link":"#四、http-请求-服务器处理并返回请求","children":[]},{"level":3,"title":"五、浏览器解析并渲染页面","slug":"五、浏览器解析并渲染页面","link":"#五、浏览器解析并渲染页面","children":[]},{"level":3,"title":"六、断开连接","slug":"六、断开连接","link":"#六、断开连接","children":[]}],"git":{},"readingTime":{"minutes":5.77,"words":1730},"filePathRelative":"计算机网络/七层模型/应用层/基础概念/1.浏览器输入URL后发生了什么.md","excerpt":"<h3>一、解析 URL</h3>\\n<p>首先，用户输入 URL 后浏览器根据输入的信息判断是进行 “搜索” 还是进行 “跳转网址”。如果是搜索内容，则将搜索内容加上默认的搜索引擎组合成新的 URL。如果用户输入的 URL 是合法网址，则直接跳转至输入的 URL 网址。</p>\\n<h3>二、DNS 域名解析</h3>\\n<p>浏览器通过 DNS 域名解析服务将输入的域名 解析为对应服务的 IP 地址，这样才能访问到域名指定的服务器。DNS 域名解析的过程如下：</p>\\n<h4>1. 本地 DNS 服务器查询</h4>\\n<p>客户端会依次在 浏览器缓存、本地 hosts 文件、本地 DNS 服务器缓存、本地 DNS 服务器 去查询域名，如果在任意一步查询到域名，直接返回域名对应的 IP 地址。</p>","autoDesc":true}');export{c as comp,E as data};
