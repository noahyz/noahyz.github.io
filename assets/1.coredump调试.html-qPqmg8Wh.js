import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-D1zlwylF.js";const e={};function h(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="c-code-dump-调试" tabindex="-1"><a class="header-anchor" href="#c-code-dump-调试"><span>C++ code dump 调试</span></a></h2><p>打开 core dump 开关：<code>ulimit -c unlimited</code></p><h3 id="一、生成一个-core-dump" tabindex="-1"><a class="header-anchor" href="#一、生成一个-core-dump"><span>一、生成一个 core dump</span></a></h3><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上代码会生成 core dump，我们使用如下方法进行调试</p><h3 id="二、dmesg-addr2line-调试" tabindex="-1"><a class="header-anchor" href="#二、dmesg-addr2line-调试"><span>二、dmesg + addr2line 调试</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/data/home/noahyzhang/learn/core] dmesg </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> a.out</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[10346599.866661] a.out[25068]: segfault at 0 ip 000000000040055b sp 00007fff0228e090 error 6 in a.out[400000+1000]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/data/home/noahyzhang/learn/core] addr2line -e a.out -f 000000000040055b</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/data/home/noahyzhang/learn/core/core.c:6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>demsg：用于检测和控制内核缓冲，可以获取出错堆栈地址</li><li>addr2line：可以将指令的地址和可执行映像转换成文件名、函数名或源代码的工具。使用 -e 可以指定可执行映像，使用 -f 选项可以输出函数名</li></ul><p>先使用 dmesg 找到对应的出错地址，再用 addr2line -e 将地址解析到对应的代码行</p><h3 id="三、gdb-调试" tabindex="-1"><a class="header-anchor" href="#三、gdb-调试"><span>三、gdb 调试</span></a></h3><p><code>gdb a.out core.25068</code> 进行调试，不要再次使用 r 去运行，因为实际开发中，很多问题都是概率发生的。使用 bt 即可看到程序出错代码行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/data/home/noahyzhang/learn/core] gdb core.25068 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gdb</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (GDB) Red Hat Enterprise Linux 7.6.1-119.tl2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (C) 2013 Free Software Foundation, Inc.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">License</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GPLv3+:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GPL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> later</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">http://gnu.org/licenses/gpl.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> software:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> change</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> redistribute</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> it.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">There</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> NO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> WARRANTY,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> extent</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> permitted</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> law.</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;show copying&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">and</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;show warranty&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> details.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GDB</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> configured</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;x86_64-redhat-linux-gnu&quot;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">For</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bug</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> reporting</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> instructions,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> please</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> see:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">http://www.gnu.org/software/gdb/bugs/</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[New LWP 25068]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Missing</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> separate</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> debuginfo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> executable</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Try:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --enablerepo=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;*debug*&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /usr/lib/debug/.build-id/9e/58829cf2411a83aa62369519de72c6dbe9b0e8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Core</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> generated</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./a.out&#39;.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Program terminated with signal 11, Segmentation fault.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#0  0x000000000040055b in ?? ()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&quot;/data/home/noahyzhang/learn/core/core.25068&quot; is a core file.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Please specify an executable to debug.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">(gdb) bt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#0  0x000000000040055b in ?? ()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#1  0x00007fff0228e180 in ?? ()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#2  0x0000000000000000 in ?? ()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">(gdb) file ./a.out</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Reading symbols from /data/home/noahyzhang/learn/core/a.out...done.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">(gdb) </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">(gdb) </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">(gdb) bt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">#0  0x000000000040055b in main () at core.c:6</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">(gdb)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>gdb 的其他选项</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>bt： 查看堆栈信息</span></span>
<span class="line"><span>i locals：查看当前程序栈的局部变量</span></span>
<span class="line"><span>i args：查看当前程序栈的参数</span></span>
<span class="line"><span>i catch：查看当前程序中栈帧的异常处理器</span></span>
<span class="line"><span>p a：打印变量的值</span></span>
<span class="line"><span>i register：查看当前寄存器的值</span></span>
<span class="line"><span>r：从运行程序至第一个断点</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四、strace-addr2line-调试" tabindex="-1"><a class="header-anchor" href="#四、strace-addr2line-调试"><span>四、strace + addr2line 调试</span></a></h3><p>strace 常用来跟踪进程执行时的系统调用和所接收的信号。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>-c: 统计每一系统调用的所执行的时间、次数和出错的次数等</span></span>
<span class="line"><span>-p：指定进程 pid</span></span>
<span class="line"><span>-i：输出系统调用的入口指针</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>➜  [/data/home/noahyzhang/learn/core] strace -i ./a.out </span></span>
<span class="line"><span>[00007f4c4663fcc7] execve(&quot;./a.out&quot;, [&quot;./a.out&quot;], [/* 34 vars */]) = 0</span></span>
<span class="line"><span>[00007f87ae8cfaac] brk(0)               = 0x13f5000</span></span>
<span class="line"><span>[00007f87ae8d07da] mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f87aead7000</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>[00007f87add3a27c] brk(0)               = 0x13f5000</span></span>
<span class="line"><span>[00007f87add3a27c] brk(0x1427000)       = 0x1427000</span></span>
<span class="line"><span>[000000000040055b] --- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_MAPERR, si_addr=0} ---</span></span>
<span class="line"><span>[????????????????] +++ killed by SIGSEGV (core dumped) +++</span></span>
<span class="line"><span>[1]    32151 segmentation fault  strace -i ./a.out</span></span>
<span class="line"><span></span></span>
<span class="line"><span>➜  [/data/home/noahyzhang/learn/core] addr2line -e a.out -f 000000000040055b</span></span>
<span class="line"><span>main</span></span>
<span class="line"><span>/data/home/noahyzhang/learn/core/core.c:6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 strace 输出 core dump 的时候调用系统调用的入口指针，然后在用 addr2line 来转换得到文件和函数名</p><h3 id="五、崩溃监控方案" tabindex="-1"><a class="header-anchor" href="#五、崩溃监控方案"><span>五、崩溃监控方案</span></a></h3><div class="language-c++ line-numbers-mode" data-highlighter="shiki" data-ext="c++" data-title="c++" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;signal.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &lt;boost/stacktrace.hpp&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> signal_handler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> sig_num</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    signal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(sig_num, SIG_DFL);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;">    boost</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;">stacktrace</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">safe_dump_to</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;./backtrace.dump&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    raise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(SIGABRT);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> sign_register</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    signal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(SIGSEGV, </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">signal_handler);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    signal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(SIGABRT, </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">signal_handler);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    sign_register</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过向系统注册发生Segmentation Fault和Abort时的回调即可监控C++的崩溃，在回调里就可采集崩溃栈等信息，可以使用boost库方便的记录backtrace等信息。</p>`,22)]))}const k=i(e,[["render",h],["__file","1.coredump调试.html.vue"]]),r=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/1.coredump%E8%B0%83%E8%AF%95.html","title":"1.coredump调试","lang":"zh-CN","frontmatter":{"title":"1.coredump调试","date":"2023-01-19T11:11:41.000Z","tags":["linux"],"description":"C++ code dump 调试 打开 core dump 开关：ulimit -c unlimited 一、生成一个 core dump 如上代码会生成 core dump，我们使用如下方法进行调试 二、dmesg + addr2line 调试 demsg：用于检测和控制内核缓冲，可以获取出错堆栈地址 addr2line：可以将指令的地址和可执行映像...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/1.coredump%E8%B0%83%E8%AF%95.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"1.coredump调试"}],["meta",{"property":"og:description","content":"C++ code dump 调试 打开 core dump 开关：ulimit -c unlimited 一、生成一个 core dump 如上代码会生成 core dump，我们使用如下方法进行调试 二、dmesg + addr2line 调试 demsg：用于检测和控制内核缓冲，可以获取出错堆栈地址 addr2line：可以将指令的地址和可执行映像..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:published_time","content":"2023-01-19T11:11:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.coredump调试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-19T11:11:41.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"C++ code dump 调试","slug":"c-code-dump-调试","link":"#c-code-dump-调试","children":[{"level":3,"title":"一、生成一个 core dump","slug":"一、生成一个-core-dump","link":"#一、生成一个-core-dump","children":[]},{"level":3,"title":"二、dmesg + addr2line 调试","slug":"二、dmesg-addr2line-调试","link":"#二、dmesg-addr2line-调试","children":[]},{"level":3,"title":"三、gdb 调试","slug":"三、gdb-调试","link":"#三、gdb-调试","children":[]},{"level":3,"title":"四、strace + addr2line 调试","slug":"四、strace-addr2line-调试","link":"#四、strace-addr2line-调试","children":[]},{"level":3,"title":"五、崩溃监控方案","slug":"五、崩溃监控方案","link":"#五、崩溃监控方案","children":[]}]}],"git":{},"readingTime":{"minutes":2.6,"words":781},"filePathRelative":"编程语言/c++语言/编译调试/1.coredump调试.md","localizedDate":"2023年1月19日","excerpt":"<h2>C++ code dump 调试</h2>\\n<p>打开 core dump 开关：<code>ulimit -c unlimited</code></p>\\n<h3>一、生成一个 core dump</h3>\\n<div class=\\"language-c line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"c\\" data-title=\\"c\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">#include</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> &lt;stdio.h&gt;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">int</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> main</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">    int*</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\"> p </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">=</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> NULL</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">    *</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">p </span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">=</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> 0</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">    printf</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\">\\"</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\">%d</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#56B6C2\\">\\\\n</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\">\\"</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#005CC5;--shiki-dark:#D19A66\\"> 0</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,r as data};
