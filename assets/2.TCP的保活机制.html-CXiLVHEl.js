import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as p,o as i}from"./app-D1zlwylF.js";const l={};function n(a,e){return i(),o("div",null,e[0]||(e[0]=[p("<p>TCP 的 keepalive 机制，如果在一段时间内，客户端和服务端之间没有任何报文传输，那么 TCP 的保活机制就会开始起作用。他会每隔一定的时间间隔，发送一个探测报文，如果连续的探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，操作系统便将错误信息通知给上层应用程序。</p><p>内核提供了一些参数可以用来设置保活机制。包括：保活时间、保活探测的次数、保活探测的时间。</p><ul><li><code>net.ipv4.tcp_keepalive_time=7200</code> 表示保活时间是 7200 秒，也就是 2 小时内如果没有任何连接相关的报文，就会启动保活机制</li><li><code>net.ipv4.tcp_keepalive_intvl=75</code> 每次检测间隔为 75 秒</li><li><code>net.ipv4.tcp_keepalive_probes=9</code> 表示检测 9 次无响应，则认为对方是不可达的，从而中断本次的连接</li></ul><p>也就是说，在 Linux 系统中，默认配置下。最少需要经过 7875 秒才可以发现一个已经死亡的连接。</p><p>内核中 TCP 协议栈发送探测报文的情况：</p><ul><li>如果对端程序是正常工作的。当 TCP 保活的探测报文发送给对端，对端会正常响应，这样 TCP 保活时间会被重置，等待下一个 TCP 保活时间的到来。</li><li>如果对端主机崩溃，或对端由于其他原因导致报文不可达。当 TCP 保活的探测报文发送给对端后，没有响应，连续一定次数，达到保活探测次数后，TCP 会报告该 TCP 连接已经死亡。</li></ul><p>注意：TCP 的保活机制需要设置 socket 接口的 SO_KEEPALIVE 选项才能够生效。</p><p><strong>TCP 保活机制探测的时间也太长了？</strong></p><p>TCP 保活机制是 TCP 协议栈实现的，他是所有基于 TCP 传输协议程序的一个兜底方案。其实我们应用层也可以自己实现一套探测机制，可以在较短的时间内，探测到对方是否存活。</p><p>比如，web 服务软件一般都会提供 <code>keepalive_timeout</code> 参数，用来指定 HTTP 长连接的超时时间。如果设置了 HTTP 长连接的超时时间是 60 秒，web 服务软件就会<strong>启动一个定时器</strong>，如果客户端在完后一个 HTTP 请求后，在 60 秒内都没有再发起新的请求，定时器的时间一到，就会触发回调函数来释放该连接。</p>",10)]))}const c=t(l,[["render",n],["__file","2.TCP的保活机制.html.vue"]]),C=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E4%BC%A0%E8%BE%93%E5%B1%82/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/2.TCP%E7%9A%84%E4%BF%9D%E6%B4%BB%E6%9C%BA%E5%88%B6.html","title":"2.TCP的保活机制","lang":"zh-CN","frontmatter":{"title":"2.TCP的保活机制","description":"TCP 的 keepalive 机制，如果在一段时间内，客户端和服务端之间没有任何报文传输，那么 TCP 的保活机制就会开始起作用。他会每隔一定的时间间隔，发送一个探测报文，如果连续的探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，操作系统便将错误信息通知给上层应用程序。 内核提供了一些参数可以用来设置保活机制。包括：保活时间、保活探测的次...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E4%BC%A0%E8%BE%93%E5%B1%82/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/2.TCP%E7%9A%84%E4%BF%9D%E6%B4%BB%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"2.TCP的保活机制"}],["meta",{"property":"og:description","content":"TCP 的 keepalive 机制，如果在一段时间内，客户端和服务端之间没有任何报文传输，那么 TCP 的保活机制就会开始起作用。他会每隔一定的时间间隔，发送一个探测报文，如果连续的探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，操作系统便将错误信息通知给上层应用程序。 内核提供了一些参数可以用来设置保活机制。包括：保活时间、保活探测的次..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.TCP的保活机制\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.12,"words":636},"filePathRelative":"计算机网络/七层模型/传输层/技术原理/2.TCP的保活机制.md","excerpt":"<p>TCP 的 keepalive 机制，如果在一段时间内，客户端和服务端之间没有任何报文传输，那么 TCP 的保活机制就会开始起作用。他会每隔一定的时间间隔，发送一个探测报文，如果连续的探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，操作系统便将错误信息通知给上层应用程序。</p>\\n<p>内核提供了一些参数可以用来设置保活机制。包括：保活时间、保活探测的次数、保活探测的时间。</p>\\n<ul>\\n<li><code>net.ipv4.tcp_keepalive_time=7200</code> 表示保活时间是 7200 秒，也就是 2 小时内如果没有任何连接相关的报文，就会启动保活机制</li>\\n<li><code>net.ipv4.tcp_keepalive_intvl=75</code> 每次检测间隔为 75 秒</li>\\n<li><code>net.ipv4.tcp_keepalive_probes=9</code> 表示检测 9 次无响应，则认为对方是不可达的，从而中断本次的连接</li>\\n</ul>","autoDesc":true}');export{c as comp,C as data};
