import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,o}from"./app-D1zlwylF.js";const r={};function n(l,e){return o(),c("div",null,e[0]||(e[0]=[t("p",null,"C ++标准说：",-1),t("p",null,"可以转移到块中，但不能以初始化绕过声明的方式转移。从具有自动存储持续时间的局部变量不在范围内的点跳转到其处于范围内的点的程序是错误的，除非该变量具有POD类型（3.9）且声明时没有初始化程序。",-1),t("p",null,[t("code",null,"switch(k) { case1: int t = 4; break; default: break; }")],-1),t("p",null,"这个代码会出现交叉初始化错误，因为可以跳过变量 t 的初始化，但是此后它仍然是在作用域内，即使它从来没有首先创建过也是如此。",-1),t("p",null,[t("code",null,"switch(k) { case1: { int t = 4; } break; default: break; }")],-1),t("p",null,[t("code",null,"int t = 0; switch(k) { case1: t = 4; break; default: break; }")],-1),t("p",null,"上面这两个代码就不会出错，因为变量位于块内，并且将在块的末尾死亡，因此任何情况下，他都不会在范围内。",-1)]))}const s=a(r,[["render",n],["__file","8.c__初始化问题记录.html.vue"]]),E=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/8.c__%E5%88%9D%E5%A7%8B%E5%8C%96%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95.html","title":"8.c++初始化问题记录","lang":"zh-CN","frontmatter":{"title":"8.c++初始化问题记录","date":"2020-10-06T16:19:17.000Z","categories":["编程语言"],"tags":["c++"],"description":"C ++标准说： 可以转移到块中，但不能以初始化绕过声明的方式转移。从具有自动存储持续时间的局部变量不在范围内的点跳转到其处于范围内的点的程序是错误的，除非该变量具有POD类型（3.9）且声明时没有初始化程序。 switch(k) { case1: int t = 4; break; default: break; } 这个代码会出现交叉初始化错误，因...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/8.c__%E5%88%9D%E5%A7%8B%E5%8C%96%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"8.c++初始化问题记录"}],["meta",{"property":"og:description","content":"C ++标准说： 可以转移到块中，但不能以初始化绕过声明的方式转移。从具有自动存储持续时间的局部变量不在范围内的点跳转到其处于范围内的点的程序是错误的，除非该变量具有POD类型（3.9）且声明时没有初始化程序。 switch(k) { case1: int t = 4; break; default: break; } 这个代码会出现交叉初始化错误，因..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"c++"}],["meta",{"property":"article:published_time","content":"2020-10-06T16:19:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8.c++初始化问题记录\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-10-06T16:19:17.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.81,"words":243},"filePathRelative":"编程语言/c++语言/编码技巧/8.c++初始化问题记录.md","localizedDate":"2020年10月7日","excerpt":"<p>C ++标准说：</p>\\n<p>可以转移到块中，但不能以初始化绕过声明的方式转移。从具有自动存储持续时间的局部变量不在范围内的点跳转到其处于范围内的点的程序是错误的，除非该变量具有POD类型（3.9）且声明时没有初始化程序。</p>\\n<p><code>switch(k) {   case1:   int t = 4;   break;    default:  break; }</code></p>\\n<p>这个代码会出现交叉初始化错误，因为可以跳过变量 t 的初始化，但是此后它仍然是在作用域内，即使它从来没有首先创建过也是如此。</p>\\n<p><code>switch(k) {   case1:   {     int t = 4;   }   break;   default:   break; }</code></p>","autoDesc":true}');export{s as comp,E as data};
