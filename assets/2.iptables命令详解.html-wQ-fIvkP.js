import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as i,o as s}from"./app-D1zlwylF.js";const l={};function p(r,a){return s(),t("div",null,a[0]||(a[0]=[i('<h2 id="iptables-命令原理使用详解" tabindex="-1"><a class="header-anchor" href="#iptables-命令原理使用详解"><span>iptables 命令原理使用详解</span></a></h2><p>iptables的主要功能是实现对网络数据包进出设备及转发的控制。当数据包需要进入设备、从设备中流出或者经该设备转发、路由时，都可以使用iptables进行控制。</p><h3 id="iptables名词和术语" tabindex="-1"><a class="header-anchor" href="#iptables名词和术语"><span>iptables名词和术语</span></a></h3><ul><li>容器：用来形容包含或者属于的关系</li><li>iptables是表的容器，iptables包含多个表</li><li>表(tables)又是链(chains)的容器</li><li>链(INPUT,OUTPUT,FORWARD,PREROUTING,POSTROUTING)是规则的容器</li><li>规则(Policy)就是一条条过滤的语句</li></ul><ol><li>filter表<br> 这个表是负责主机的防火墙功能的，就是过滤流入流出主机的数据包。filter表是iptables默认使用的表。这个表定义了三个链(chains) <ul><li>INPUT: 负责过滤所有目标地址是主机地址的数据包。就是过滤进入主机的数据包</li><li>FORWARD: 负责转发流经主机的数据包。起转发的作用。</li><li>OUTPUT: 处理所有源地址是本机地址的数据包。就是处理从主机发出去的数据包</li></ul></li><li>net表<br> 这个表是负责网络地址转换，即来源与目的ip地址和port的转换。应用：和主机本身无关，一般用于局域网共享上网或者特殊的端口转换服务相关<br> 这个表定义了三个链(chain),nat功能就相当于网络的 acl 控制。和网络交换机 acl 类似 <ul><li>OUTPUT: 和主机发出去的数据包有关，改变主机发出数据包的目标地址</li><li>PREROUTING: 在数据包到达防火墙进行路由判断之前执行的规则，作用是改变数据包的目的地址、目的端口等</li><li>POSTROUTING: 在数据包离开防火墙时进行路由判断之后执行的规则，作用是改变数据包的源地址、源端口等。例如：我们的笔记本或者虚拟机是192.168.30.0/24，就是出网的时候被企业路由器把源地址改成公网地址了。</li></ul></li></ol><h3 id="iptables中的-四表五链-及-堵通策略" tabindex="-1"><a class="header-anchor" href="#iptables中的-四表五链-及-堵通策略"><span>iptables中的“四表五链”及“堵通策略”</span></a></h3><ol><li><p>“四表”是指，iptables的功能——filter, nat, mangle, raw.</p><ul><li>filter, 控制数据包是否允许进出及转发（INPUT、OUTPUT、FORWARD）,可以控制的链路有input, forward, output</li><li>nat, 控制数据包中地址转换，可以控制的链路有prerouting, input, output, postrouting</li><li>mangle,修改数据包中的原数据，可以控制的链路有prerouting, input, forward, output, postrouting</li><li>raw,控制nat表中连接追踪机制的启用状况，可以控制的链路有prerouting, output</li><li>注：在centos7中，还有security表，不过这里不作介绍</li></ul></li><li><p>“五链”是指内核中控制网络的NetFilter定义的五个规则链，分别为</p><ul><li>PREROUTING, 路由前,用于目标地址转换(DNAT)</li><li>INPUT, 数据包流入口,处理输入数据包</li><li>FORWARD, 转发管理,处理转发数据包</li><li>OUTPUT, 数据包出口,处理输出数据包</li><li>POSTROUTING, 路由后,用于源地址转换(SNAT)</li></ul></li><li><p>堵通策略是指对数据包所做的操作，一般有两种操作——“通（ACCEPT）”、“堵（DROP）”，还有一种操作很常见REJECT.<br> 谈谈REJECT和DROP之间的区别，Ming写了一封信，向Rose示爱。Rose如果不愿意接受，她可以不回应Ming,这个时候Ming不确定Rose是否接到了信；Rose也可以同样写一封信，在信中明确地拒绝Ming。前一种操作就如同执行了DROP操作，而后一种操作就如同REJECT操作。</p></li></ol><h3 id="命令选项" tabindex="-1"><a class="header-anchor" href="#命令选项"><span>命令选项</span></a></h3><p>-t, --table table 对指定的表进行操作，table必须是raw、nat、filter、mangle中的一个。如果不指定此选项，默认的是filter表</p><p><strong>通用匹配：源地址和目的地址的匹配</strong><br> -p: 指定要匹配的数据包协议类型<br> -s, --source [!] address[/mask]: 把指定的一个或一组地址作为源地址，按此规则进行过滤。当后面没有mask时，address是一个地址，比如：192.168.1.1；当指定mask时，可以表示一组范围内的地址，比如：192.168.1.0/255.255.255.0 或者 192.168.1.0/24。! 表示取反<br> -d, --destination [!] address[/mask]: 指定目的地址，和指定源地址规则一样<br> -i, --in-interface [!] &lt;网络接口name&gt;: 指定数据包来自那个网络接口，比如常见的eth0。注意：它只对 INPUT、FORWARD、PREROUTING 这三个链起作用。如果没有指定此选项，则可以来自任意一个网络接口。<br> -o, --out-interface [!] &lt;网络接口name&gt;: 指定数据包出去的网络接口。只对 OUTPUT、FORWARD、POSTROUTING 三个链起作用<br> --dport num 匹配目标端口号<br> --sport num 匹配来源端口号</p><p><strong>查看管理命令</strong><br> -L, --list [chain] 列出链 chain 上面的所有规则，如果没有指定链，列出表上所有链的所有规则</p><p><strong>规则管理命令</strong><br> -A, --append chain rule-specification 在指定链 chain 的末尾插入指定的规则，就是说，这条规则会被放到最后，最后才会被执行。规则由后面的匹配来指定<br> -I, --insert chain [rulenum] rule-specification 在链 chain 中的指定位置插入一条或多条规则。如果指定的规则号是1，则在链的头部插入。如果没有指定规则号，默认会插入链的头部<br> -D, --delete chain rule-specification -D, --delete chain rulenum 在指定的链 chain 中删除一个或多个指定规则<br> -R num: Replays 替换/修改第几条规则</p><p><strong>链管理命令</strong>(都是立即生效的)<br> -P, --policy chain target: 为指定的链 chain 设置策略 target。注意：只有内置的五条链才允许有策略，用户自定义的是不允许的<br> -F, --flush [chain] 清空指定链 chain 上面的所有规则，如果没有指定链，清空该表上所有链的所有规则<br> -N, --new-chain chain 用指定的名字创建一个新的链<br> -X, --delete-chain [chain] 删除指定的链，这个链必须没有被其他任何规则引用，而且这条链上必须没有任何规则。如果没有指定域名，则会删除该表中所有非内置的链<br> -E, --rename-chain old-chain new-chain 用指定的新名字去重命名指定的链。这并不会对链造成任何影响<br> -Z, -zero [chain] 把指定的链或者表中所有链上的所有计数器清零</p><p>-j, --jump target &lt;指定目标&gt; ：即满足某条件时该执行什么样的动作。target 可以是内置的目标，比如 ACCEPT，也可以是用户自定义的链。<br> -h：显示帮助信息</p><p><strong>命令选项的输入顺序</strong>: iptables -t 表名 &lt;-A/I/D/R&gt; 规则链名 [规则号] &lt;-i/o 网卡名&gt; -p 协议名 &lt;-s 源IP/源子网&gt; --sport 源端口 &lt;-d 目标IP/目标子网&gt; --dport 目标端口 -j 动作</p><h3 id="防火墙策略" tabindex="-1"><a class="header-anchor" href="#防火墙策略"><span>防火墙策略</span></a></h3><p>iptables现在是一个服务，可以进行启动，停止的。启动，则将规则直接生效，停止，则将规则撤销。<br> 表名包括：<br> - raw ：高级功能，如：网址过滤。<br> - mangle ：数据包修改（QOS），用于实现服务质量。<br> - nat ：地址转换，用于网关路由器。<br> - filter ：包过滤，用于防火墙规则。<br> 动作包括：<br> - ACCEPT ：接收数据包。<br> - DROP ：丢弃数据包。<br> - REDIRECT ：重定向、映射、透明代理。<br> - SNAT ：源地址转换。<br> - DNAT ：目标地址转换。<br> - MASQUERADE ：IP伪装（NAT），用于ADSL。<br> - LOG ：日志记录。<br> - SEMARK : 添加SEMARK标记以供网域内强制访问控制（MAC）</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><h5 id="清空当前的所有规则和计数" tabindex="-1"><a class="header-anchor" href="#清空当前的所有规则和计数"><span>清空当前的所有规则和计数</span></a></h5><p>iptables -F # 清空所有的防火墙规则<br> iptables -X # 删除用户自定义的空链<br> iptables -Z # 清空计数</p><h5 id="匹配允许-ssh-端口连接" tabindex="-1"><a class="header-anchor" href="#匹配允许-ssh-端口连接"><span>匹配允许 ssh 端口连接</span></a></h5><p>// 22为ssh端口， -s 192.168.1.0/24表示允许这个网段的机器来连接，其它网段的ip地址是登陆不了你的机器的。 -j ACCEPT表示接受这样的请求<br> iptables -A INPUT -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT</p><h5 id="允许本地回环地址可以正常使用" tabindex="-1"><a class="header-anchor" href="#允许本地回环地址可以正常使用"><span>允许本地回环地址可以正常使用</span></a></h5><p>iptables -A INPUT -i lo -j ACCEPT<br> // 本地回环地址就是那个127.0.0.1，是本机上使用的,它进与出都设置为允许<br> iptables -A OUTPUT -o lo -j ACCEPT</p><h5 id="设置默认的规则" tabindex="-1"><a class="header-anchor" href="#设置默认的规则"><span>设置默认的规则</span></a></h5><p>iptables -P INPUT DROP # 配置默认的不让进<br> iptables -P FORWARD DROP # 默认的不允许转发<br> iptables -P OUTPUT ACCEPT # 默认的可以出去</p><h5 id="配置白名单" tabindex="-1"><a class="header-anchor" href="#配置白名单"><span>配置白名单</span></a></h5><p>iptables -A INPUT -p all -s 192.168.1.0/24 -j ACCEPT # 允许机房内网机器可以访问<br> iptables -A INPUT -p all -s 192.168.140.0/24 -j ACCEPT # 允许机房内网机器可以访问<br> iptables -A INPUT -p tcp -s 183.121.3.7 --dport 3380 -j ACCEPT # 允许183.121.3.7访问本机的3380端口</p><h5 id="开启相应的服务端口" tabindex="-1"><a class="header-anchor" href="#开启相应的服务端口"><span>开启相应的服务端口</span></a></h5><p>iptables -A INPUT -p tcp --dport 80 -j ACCEPT # 开启80端口，因为web对外都是这个端口<br> iptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT # 允许被ping<br> iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT # 已经建立的连接得让它进来</p><h5 id="保存规则到配置文件中" tabindex="-1"><a class="header-anchor" href="#保存规则到配置文件中"><span>保存规则到配置文件中</span></a></h5><p>cp /etc/sysconfig/iptables /etc/sysconfig/iptables.bak # 任何改动之前先备份，请保持这一优秀的习惯<br> iptables-save &gt; /etc/sysconfig/iptables<br> cat /etc/sysconfig/iptables</p><h5 id="列出已设置的规则" tabindex="-1"><a class="header-anchor" href="#列出已设置的规则"><span>列出已设置的规则</span></a></h5><p>iptables -L [-t 表名] [链名]<br> - 四个表名 raw，nat，filter，mangle<br> - 五个规则链名 INPUT、OUTPUT、FORWARD、PREROUTING、POSTROUTING<br> - filter表包含INPUT、OUTPUT、FORWARD三个规则链<br> iptables -L -t nat # 列出 nat 上面的所有规则<br> - -t 参数指定，必须是 raw， nat，filter，mangle 中的一个<br> iptables -L -t nat --line-numbers # 规则带编号<br> iptables -L INPUT<br> iptables -L -nv # 查看，这个列表看起来更详细</p><h5 id="清除已有规则" tabindex="-1"><a class="header-anchor" href="#清除已有规则"><span>清除已有规则</span></a></h5><p>iptables -F INPUT # 清空指定链 INPUT 上面的所有规则<br> iptables -X INPUT # 删除指定的链，这个链必须没有被其它任何规则引用，而且这条上必须没有任何规则。<br> # 如果没有指定链名，则会删除该表中所有非内置的链。<br> iptables -Z INPUT # 把指定链，或者表中的所有链上的所有计数器清零。</p><h5 id="删除已添加的规则" tabindex="-1"><a class="header-anchor" href="#删除已添加的规则"><span>删除已添加的规则</span></a></h5><p>添加一条规则: iptables -A INPUT -s 192.168.1.5 -j DROP<br> 将所有iptables以序号标记显示，执行：iptables -L -n --line-numbers<br> 比如要删除INPUT里序号为8的规则，执行：iptables -D INPUT 8</p><h5 id="开放指定的端口" tabindex="-1"><a class="header-anchor" href="#开放指定的端口"><span>开放指定的端口</span></a></h5><p>iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT #允许本地回环接口(即运行本机访问本机)<br> iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT #允许已建立的或相关连的通行<br> iptables -A OUTPUT -j ACCEPT #允许所有本机向外的访问<br> iptables -A INPUT -p tcp --dport 22 -j ACCEPT #允许访问22端口<br> iptables -A INPUT -p tcp --dport 80 -j ACCEPT #允许访问80端口<br> iptables -A INPUT -p tcp --dport 21 -j ACCEPT #允许ftp服务的21端口<br> iptables -A INPUT -p tcp --dport 20 -j ACCEPT #允许FTP服务的20端口<br> iptables -A INPUT -j reject #禁止其他未允许的规则访问<br> iptables -A FORWARD -j REJECT #禁止其他未允许的规则访问</p><h5 id="屏蔽ip" tabindex="-1"><a class="header-anchor" href="#屏蔽ip"><span>屏蔽IP</span></a></h5><p>iptables -A INPUT -p tcp -m tcp -s 192.168.0.8 -j DROP # 屏蔽恶意主机（比如，192.168.0.8<br> iptables -I INPUT -s 123.45.6.7 -j DROP #屏蔽单个IP的命令<br> iptables -I INPUT -s 123.0.0.0/8 -j DROP #封整个段即从123.0.0.1到123.255.255.254的命令<br> iptables -I INPUT -s 124.45.0.0/16 -j DROP #封IP段即从123.45.0.1到123.45.255.254的命令<br> iptables -I INPUT -s 123.45.6.0/24 -j DROP #封IP段即从123.45.6.1到123.45.6.254的命令是</p><h5 id="指定数据包出去的网络接口" tabindex="-1"><a class="header-anchor" href="#指定数据包出去的网络接口"><span>指定数据包出去的网络接口</span></a></h5><p>只对 OUTPUT，FORWARD，POSTROUTING 三个链起作用。<br> iptables -A FORWARD -o eth0</p><h5 id="查看已添加的规则" tabindex="-1"><a class="header-anchor" href="#查看已添加的规则"><span>查看已添加的规则</span></a></h5><p>iptables -L -n -v</p><h5 id="启动网络转发规则" tabindex="-1"><a class="header-anchor" href="#启动网络转发规则"><span>启动网络转发规则</span></a></h5><p>公网210.14.67.7让内网192.168.188.0/24上网<br> iptables -t nat -A POSTROUTING -s 192.168.188.0/24 -j SNAT --to-source 210.14.67.127</p><h5 id="端口映射" tabindex="-1"><a class="header-anchor" href="#端口映射"><span>端口映射</span></a></h5><p>本机的 2222 端口映射到内网 虚拟机的22 端口<br> iptables -t nat -A PREROUTING -d 210.14.67.127 -p tcp --dport 2222 -j DNAT --to-dest 192.168.188.115:22</p><h5 id="字符串匹配" tabindex="-1"><a class="header-anchor" href="#字符串匹配"><span>字符串匹配</span></a></h5><p>比如，我们要过滤所有TCP连接中的字符串test，一旦出现它我们就终止这个连接，我们可以这么做：<br> iptables -A INPUT -p tcp -m string --algo kmp --string &quot;test&quot; -j REJECT --reject-with tcp-reset</p><h5 id="阻止windows蠕虫的攻击" tabindex="-1"><a class="header-anchor" href="#阻止windows蠕虫的攻击"><span>阻止Windows蠕虫的攻击</span></a></h5><p>iptables -I INPUT -j DROP -p tcp -s 0.0.0.0/0 -m string --algo kmp --string &quot;cmd.exe&quot;</p><h5 id="防止syn洪水攻击" tabindex="-1"><a class="header-anchor" href="#防止syn洪水攻击"><span>防止SYN洪水攻击</span></a></h5><p>iptables -A INPUT -p tcp --syn -m limit --limit 5/second -j ACCEPT</p><h5 id="iptables-服务启动关闭" tabindex="-1"><a class="header-anchor" href="#iptables-服务启动关闭"><span>iptables 服务启动关闭</span></a></h5><p>service iptables restart/start/...<br> service iptables save 保存设置</p><p>参考：<a href="https://wangchujiang.com/linux-command/c/iptables.html" target="_blank" rel="noopener noreferrer">https://wangchujiang.com/linux-command/c/iptables.html</a></p>',59)]))}const h=e(l,[["render",p],["__file","2.iptables命令详解.html.vue"]]),c=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B7%A5%E5%85%B7%E8%BF%90%E7%BB%B4/2.iptables%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html","title":"2.iptables命令详解","lang":"zh-CN","frontmatter":{"title":"2.iptables命令详解","date":"2020-03-14T21:11:24.000Z","tags":["iptables"],"description":"iptables 命令原理使用详解 iptables的主要功能是实现对网络数据包进出设备及转发的控制。当数据包需要进入设备、从设备中流出或者经该设备转发、路由时，都可以使用iptables进行控制。 iptables名词和术语 容器：用来形容包含或者属于的关系 iptables是表的容器，iptables包含多个表 表(tables)又是链(chain...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E5%B7%A5%E5%85%B7%E8%BF%90%E7%BB%B4/2.iptables%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"2.iptables命令详解"}],["meta",{"property":"og:description","content":"iptables 命令原理使用详解 iptables的主要功能是实现对网络数据包进出设备及转发的控制。当数据包需要进入设备、从设备中流出或者经该设备转发、路由时，都可以使用iptables进行控制。 iptables名词和术语 容器：用来形容包含或者属于的关系 iptables是表的容器，iptables包含多个表 表(tables)又是链(chain..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"iptables"}],["meta",{"property":"article:published_time","content":"2020-03-14T21:11:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.iptables命令详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-03-14T21:11:24.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"iptables 命令原理使用详解","slug":"iptables-命令原理使用详解","link":"#iptables-命令原理使用详解","children":[{"level":3,"title":"iptables名词和术语","slug":"iptables名词和术语","link":"#iptables名词和术语","children":[]},{"level":3,"title":"iptables中的“四表五链”及“堵通策略”","slug":"iptables中的-四表五链-及-堵通策略","link":"#iptables中的-四表五链-及-堵通策略","children":[]},{"level":3,"title":"命令选项","slug":"命令选项","link":"#命令选项","children":[]},{"level":3,"title":"防火墙策略","slug":"防火墙策略","link":"#防火墙策略","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{},"readingTime":{"minutes":10.07,"words":3022},"filePathRelative":"计算机网络/工具运维/2.iptables命令详解.md","localizedDate":"2020年3月15日","excerpt":"<h2>iptables 命令原理使用详解</h2>\\n<p>iptables的主要功能是实现对网络数据包进出设备及转发的控制。当数据包需要进入设备、从设备中流出或者经该设备转发、路由时，都可以使用iptables进行控制。</p>\\n<h3>iptables名词和术语</h3>\\n<ul>\\n<li>容器：用来形容包含或者属于的关系</li>\\n<li>iptables是表的容器，iptables包含多个表</li>\\n<li>表(tables)又是链(chains)的容器</li>\\n<li>链(INPUT,OUTPUT,FORWARD,PREROUTING,POSTROUTING)是规则的容器</li>\\n<li>规则(Policy)就是一条条过滤的语句</li>\\n</ul>","autoDesc":true}');export{h as comp,c as data};
