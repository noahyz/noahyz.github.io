import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as e}from"./app-D1zlwylF.js";const l={};function p(t,s){return e(),n("div",null,s[0]||(s[0]=[a(`<h2 id="go语言编译构建时-ldflags-变量注入" tabindex="-1"><a class="header-anchor" href="#go语言编译构建时-ldflags-变量注入"><span>Go语言编译构建时 ldflags 变量注入</span></a></h2><p>Go 语言在编译构建时，可以注入变量。如下：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#98C379;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Version</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;0.0.1&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    fmt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Version</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>如果不注入变量</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>go build -o main main.go</span></span>
<span class="line"><span>./main</span></span>
<span class="line"><span>0.0.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注入变量。编译构建时，通过命令，注入 main 包的 Version 变量值</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>go build -ldflags &quot;-X main.Version=0.0.9&quot; -o main main.go</span></span>
<span class="line"><span>./main</span></span>
<span class="line"><span>0.0.9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="一、常见的写法" tabindex="-1"><a class="header-anchor" href="#一、常见的写法"><span>一、常见的写法</span></a></h3><p>我们需要将编译构建的 ldflags 写到文件中，makefile 是比较常见的方式。如下示例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>├── Makefile</span></span>
<span class="line"><span>├── VERSION</span></span>
<span class="line"><span>├── go.mod</span></span>
<span class="line"><span>├── main.go</span></span>
<span class="line"><span>└── version.go</span></span>
<span class="line"><span>|__ .git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>version.go 的内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package main</span></span>
<span class="line"><span></span></span>
<span class="line"><span>var (</span></span>
<span class="line"><span>    Version   string</span></span>
<span class="line"><span>    GoVersion string</span></span>
<span class="line"><span>    Built     string</span></span>
<span class="line"><span>    GitCommit string</span></span>
<span class="line"><span>    OSArch    string</span></span>
<span class="line"><span>)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>main.go 的内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package main</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import (</span></span>
<span class="line"><span>    &quot;flag&quot;</span></span>
<span class="line"><span>    &quot;fmt&quot;</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>func main() {</span></span>
<span class="line"><span>    var v bool</span></span>
<span class="line"><span>    flag.BoolVar(&amp;v, &quot;v&quot;, false, &quot;Show Version&quot;)</span></span>
<span class="line"><span>    flag.Parse()</span></span>
<span class="line"><span>    if v {</span></span>
<span class="line"><span>        fmt.Printf(&quot;Version    : %s \\n&quot;, Version)</span></span>
<span class="line"><span>        fmt.Printf(&quot;Go Version : %s \\n&quot;, GoVersion)</span></span>
<span class="line"><span>        fmt.Printf(&quot;Built      : %s \\n&quot;, Built)</span></span>
<span class="line"><span>        fmt.Printf(&quot;Git Commit : %s \\n&quot;, GitCommit)</span></span>
<span class="line"><span>        fmt.Printf(&quot;OS/Arch    : %s \\n&quot;, OSArch)</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VERSION 文件的内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>0.0.9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Makefile 的内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>BIN = main</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 注入变量</span></span>
<span class="line"><span>VERSION = \`cat VERSION\`</span></span>
<span class="line"><span>GOVERSION = \`go version\`</span></span>
<span class="line"><span>BUILT = \`date &quot;+%F %T&quot;\`</span></span>
<span class="line"><span>GITCOMMIT = \`git rev-parse HEAD\`</span></span>
<span class="line"><span>OSARCH = \`go env GOOS\`/\`go env GOARCH\`</span></span>
<span class="line"><span></span></span>
<span class="line"><span>LDFLAGS = &quot;\\</span></span>
<span class="line"><span>	-X &#39;main.Version=\${VERSION}&#39; \\</span></span>
<span class="line"><span>	-X &#39;main.GoVersion=\${GOVERSION}&#39; \\</span></span>
<span class="line"><span>	-X &#39;main.Built=\${BUILT}&#39; \\</span></span>
<span class="line"><span>	-X &#39;main.GitCommit=\${GITCOMMIT}&#39; \\</span></span>
<span class="line"><span>	-X &#39;main.OSArch=\${OSARCH}&#39; &quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>main:</span></span>
<span class="line"><span>	go build -ldflags \${LDFLAGS} -o \${BIN}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>clean:</span></span>
<span class="line"><span>	@echo &quot;clean ...&quot;</span></span>
<span class="line"><span>	@rm -f \${BIN}</span></span>
<span class="line"><span>	@echo &quot;clean OK&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.PHONY: main clean</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后编译，运行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span># make</span></span>
<span class="line"><span>go build -ldflags &quot; -X &#39;main.Version=\`cat VERSION\`&#39; -X &#39;main.GoVersion=\`go version\`&#39; -X &#39;main.Built=\`date &quot;+%F %T&quot;\`&#39; -X &#39;main.GitCommit=\`git rev-parse HEAD\`&#39; -X &#39;main.OSArch=\`go env GOOS\`/\`go env GOARCH\`&#39; &quot; -o main</span></span>
<span class="line"><span></span></span>
<span class="line"><span># ./main -v</span></span>
<span class="line"><span>Version    : 0.0.9 </span></span>
<span class="line"><span>Go Version : go version go1.15 darwin/amd64 </span></span>
<span class="line"><span>Built      : 2022-08-11 17:01:50 </span></span>
<span class="line"><span>Git Commit : d96d1a9e1d005423d2069effdc0eda32f142e7db </span></span>
<span class="line"><span>OS/Arch    : darwin/amd64</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17)]))}const h=i(l,[["render",p],["__file","1.编译构建时ldflags变量注入.html.vue"]]),c=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80/%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/1.%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA%E6%97%B6ldflags%E5%8F%98%E9%87%8F%E6%B3%A8%E5%85%A5.html","title":"1.Go语言编译构建时ldflags变量注入","lang":"zh-CN","frontmatter":{"title":"1.Go语言编译构建时ldflags变量注入","date":"2023-01-19T11:11:41.000Z","tags":["go"],"description":"Go语言编译构建时 ldflags 变量注入 Go 语言在编译构建时，可以注入变量。如下： 如果不注入变量 注入变量。编译构建时，通过命令，注入 main 包的 Version 变量值 一、常见的写法 我们需要将编译构建的 ldflags 写到文件中，makefile 是比较常见的方式。如下示例 version.go 的内容 main.go 的内容 V...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80/%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A7/1.%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA%E6%97%B6ldflags%E5%8F%98%E9%87%8F%E6%B3%A8%E5%85%A5.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"1.Go语言编译构建时ldflags变量注入"}],["meta",{"property":"og:description","content":"Go语言编译构建时 ldflags 变量注入 Go 语言在编译构建时，可以注入变量。如下： 如果不注入变量 注入变量。编译构建时，通过命令，注入 main 包的 Version 变量值 一、常见的写法 我们需要将编译构建的 ldflags 写到文件中，makefile 是比较常见的方式。如下示例 version.go 的内容 main.go 的内容 V..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"go"}],["meta",{"property":"article:published_time","content":"2023-01-19T11:11:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.Go语言编译构建时ldflags变量注入\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-19T11:11:41.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"Go语言编译构建时 ldflags 变量注入","slug":"go语言编译构建时-ldflags-变量注入","link":"#go语言编译构建时-ldflags-变量注入","children":[{"level":3,"title":"一、常见的写法","slug":"一、常见的写法","link":"#一、常见的写法","children":[]}]}],"git":{},"readingTime":{"minutes":1.2,"words":359},"filePathRelative":"编程语言/go语言/编码技巧/1.编译构建时ldflags变量注入.md","localizedDate":"2023年1月19日","excerpt":"<h2>Go语言编译构建时 ldflags 变量注入</h2>\\n<p>Go 语言在编译构建时，可以注入变量。如下：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"go\\" data-title=\\"go\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">package</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#E5C07B\\"> main</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">import</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> \\"</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#98C379\\">fmt</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\">\\"</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">var</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\"> Version</span><span style=\\"--shiki-light:#D73A49;--shiki-dark:#E5C07B\\"> =</span><span style=\\"--shiki-light:#032F62;--shiki-dark:#98C379\\"> \\"0.0.1\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#D73A49;--shiki-dark:#C678DD\\">func</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\"> main</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">() {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">    fmt</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#6F42C1;--shiki-dark:#61AFEF\\">Println</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#E06C75\\">Version</span><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#24292E;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,c as data};
