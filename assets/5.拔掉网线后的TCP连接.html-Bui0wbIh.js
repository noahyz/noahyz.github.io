import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as r,o as n}from"./app-D1zlwylF.js";const E={};function s(a,t){return n(),o("div",null,t[0]||(t[0]=[r('<p>首先，TCP 连接在 Linux 内核中是一个名为 <code>struct socket</code> 的结构体，该结构体的内容包含 TCP 连接的状态等信息。当拔掉网线的时候，操作系统并不会变更该结构体的任何内容，所以 TCP 连接的状态暂时也不会发生改变。</p><p>主要得看拔掉网线后，两端做了什么动作，有没有进行数据传输。分场景来讨论：有数据传输、没有数据传输。</p><h3 id="一、拔掉网线后-有数据传输" tabindex="-1"><a class="header-anchor" href="#一、拔掉网线后-有数据传输"><span>一、拔掉网线后，有数据传输</span></a></h3><p>在客户端拔掉网线后，服务端向客户端发送的数据报文会得不到任何的响应，在等待一定时长后，服务端就会触发<strong>超时重传</strong>机制，重传未得到响应的数据报文。</p><ul><li><strong>如果在服务端重传报文的过程中，客户端刚好把网线插回去了</strong>，由于拔掉网线并不会改变客户端的 TCP 连接状态，并且还是处于 ESTABLISHED 状态，所以这时客户端是可以正常接收服务端发来的数据报文的，然后客户端就会回 ACK 响应报文。此时，客户端和服务端的 TCP 连接依然存在的，就感觉什么事情都没有发生。</li><li><strong>如果如果在服务端重传报文的过程中，客户端一直没有将网线插回去</strong>，服务端超时重传报文的次数达到一定阈值后，内核就会判定出该 TCP 有问题，然后通过 Socket 接口告诉应用程序该 TCP 连接出问题了，于是服务端的 TCP 连接就会断开。而等客户端插回网线后，如果客户端向服务端发送了数据，由于服务端已经没有与客户端相同四元祖的 TCP 连接了，因此服务端内核就会回复 RST 报文，客户端收到后就会释放该 TCP 连接。此时，客户端和服务端的 TCP 连接就都断开了。</li></ul><p>那么 TCP 的数据报文重传几次呢？在 Linux 系统中，提供了配置项：<code>/proc/sys/net/ipv4/tcp_retries2</code>，默认值是 15。也就是说在 TCP 连接建立的情况下，超时重传的最大次数为 15。不过 <code>tcp_retries2</code> 设置了 15 次，并不代表 TCP 超时重传了 15 次才会通知应用程序终止该 TCP 连接。内核会根据 <code>tcp_retries2</code> 设置的值，计算出一个超时时间。如果重传的间隔超过了这个超时时间，则认为超过了阈值，就会停止重传，然后就会断开 TCP 连接。</p><h3 id="二、拔掉网线后-没有数据传输" tabindex="-1"><a class="header-anchor" href="#二、拔掉网线后-没有数据传输"><span>二、拔掉网线后，没有数据传输</span></a></h3><p>针对拔掉网线后，没有数据传输的场景，还得看是否开启了 TCP keepalive 机制 （TCP 保活机制）。</p><p>如果<strong>没有开启</strong> TCP keepalive 机制，在客户端拔掉网线后，并且双方都没有进行数据传输，那么客户端和服务端的 TCP 连接将会一直保持存在。</p><p>而如果<strong>开启</strong>了 TCP keepalive 机制，在客户端拔掉网线后，即使双方都没有进行数据传输，在持续一段时间后，TCP 就会发送探测报文：</p><ul><li>如果<strong>对端是正常工作</strong>的。当 TCP 保活的探测报文发送给对端, 对端会正常响应，这样 <strong>TCP 保活时间会被重置</strong>，等待下一个 TCP 保活时间的到来。</li><li>如果<strong>对端主机宕机</strong>（注意不是进程崩溃，进程崩溃后操作系统在回收进程资源的时候，会发送 FIN 报文，而主机宕机则是无法感知的，所以需要 TCP 保活机制来探测对方是不是发生了主机宕机），或对端由于其他原因导致报文不可达。当 TCP 保活的探测报文发送给对端后，没有响应，连续几次，达到保活探测次数后，<strong>TCP 会报告该 TCP 连接已经死亡</strong>。</li></ul>',11)]))}const c=e(E,[["render",s],["__file","5.拔掉网线后的TCP连接.html.vue"]]),C=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E4%BC%A0%E8%BE%93%E5%B1%82/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/5.%E6%8B%94%E6%8E%89%E7%BD%91%E7%BA%BF%E5%90%8E%E7%9A%84TCP%E8%BF%9E%E6%8E%A5.html","title":"5.拔掉网线后的TCP连接","lang":"zh-CN","frontmatter":{"title":"5.拔掉网线后的TCP连接","description":"首先，TCP 连接在 Linux 内核中是一个名为 struct socket 的结构体，该结构体的内容包含 TCP 连接的状态等信息。当拔掉网线的时候，操作系统并不会变更该结构体的任何内容，所以 TCP 连接的状态暂时也不会发生改变。 主要得看拔掉网线后，两端做了什么动作，有没有进行数据传输。分场景来讨论：有数据传输、没有数据传输。 一、拔掉网线后，...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E4%BC%A0%E8%BE%93%E5%B1%82/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/5.%E6%8B%94%E6%8E%89%E7%BD%91%E7%BA%BF%E5%90%8E%E7%9A%84TCP%E8%BF%9E%E6%8E%A5.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"5.拔掉网线后的TCP连接"}],["meta",{"property":"og:description","content":"首先，TCP 连接在 Linux 内核中是一个名为 struct socket 的结构体，该结构体的内容包含 TCP 连接的状态等信息。当拔掉网线的时候，操作系统并不会变更该结构体的任何内容，所以 TCP 连接的状态暂时也不会发生改变。 主要得看拔掉网线后，两端做了什么动作，有没有进行数据传输。分场景来讨论：有数据传输、没有数据传输。 一、拔掉网线后，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5.拔掉网线后的TCP连接\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":3,"title":"一、拔掉网线后，有数据传输","slug":"一、拔掉网线后-有数据传输","link":"#一、拔掉网线后-有数据传输","children":[]},{"level":3,"title":"二、拔掉网线后，没有数据传输","slug":"二、拔掉网线后-没有数据传输","link":"#二、拔掉网线后-没有数据传输","children":[]}],"git":{},"readingTime":{"minutes":3.36,"words":1008},"filePathRelative":"计算机网络/七层模型/传输层/技术原理/5.拔掉网线后的TCP连接.md","excerpt":"<p>首先，TCP 连接在 Linux 内核中是一个名为 <code>struct socket</code> 的结构体，该结构体的内容包含 TCP 连接的状态等信息。当拔掉网线的时候，操作系统并不会变更该结构体的任何内容，所以 TCP 连接的状态暂时也不会发生改变。</p>\\n<p>主要得看拔掉网线后，两端做了什么动作，有没有进行数据传输。分场景来讨论：有数据传输、没有数据传输。</p>\\n<h3>一、拔掉网线后，有数据传输</h3>\\n<p>在客户端拔掉网线后，服务端向客户端发送的数据报文会得不到任何的响应，在等待一定时长后，服务端就会触发<strong>超时重传</strong>机制，重传未得到响应的数据报文。</p>","autoDesc":true}');export{c as comp,C as data};
