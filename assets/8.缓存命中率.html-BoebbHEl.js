import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as h,o as l}from"./app-D1zlwylF.js";const n={};function k(e,s){return l(),a("div",null,s[0]||(s[0]=[h(`<h2 id="缓存命中率" tabindex="-1"><a class="header-anchor" href="#缓存命中率"><span>缓存命中率</span></a></h2><p>这里的缓存指的是数据在内存中的临时存储</p><p>缓存命中率：指直接通过缓存获取数据的请求次数，占所有数据请求次数的百分比。命中率越高，表示使用缓存带来的收益越高，应用程序的性能也就越好</p><h3 id="一、工具介绍" tabindex="-1"><a class="header-anchor" href="#一、工具介绍"><span>一、工具介绍</span></a></h3><h4 id="_1-cachestat-和-cachetop" tabindex="-1"><a class="header-anchor" href="#_1-cachestat-和-cachetop"><span>1. cachestat 和 cachetop</span></a></h4><ul><li>cachestat：提供了整个操作系统缓存的读写命中情况</li><li>cachetop：提供了每个进程的缓存命中情况</li></ul><p>这两个工具都是 bbc 软件包的一部分，基于 Linux 内核的 eBPF（extended Berkeley Packet Filters）机制，来跟踪内核中管理的缓存，并输出缓存的使用和命中情况。bbc-tools 需要内核为 4.1 或者更新的版本。</p><p>安装：这个库提供了编译好的二进制：<a href="https://github.com/brendangregg/perf-tools" target="_blank" rel="noopener noreferrer">https://github.com/brendangregg/perf-tools</a></p><p>cachestat 的使用，以 1 秒的时间间隔输出：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/tmp] cachestat 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Counting</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> functions...</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Output</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> every</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> seconds.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   MISSES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  DIRTIES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    RATIO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   BUFFERS_MB</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   CACHE_MB</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    2632</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       15</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   100.0%</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          964</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       8825</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    1396</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       11</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   100.0%</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          964</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       8825</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    2228</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       17</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   100.0%</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">          964</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       8825</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>HITS：表示缓存命中的次数</li><li>MISSES：表示缓存未命中的次数</li><li>DIRTIES：表示新增到缓存中的脏页数</li><li>RATIO：缓存命中率，表示 <code>HITS / (HITS + MISSES) </code> 的值</li><li>BUFFERS_MB：表示 Buffers 的大小，以 MB 为单位</li><li>CACHE_MB：表示 cache 的大小，以 MB 为单位</li></ul><p>cachetop 的使用：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cachetop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">11:58:50</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Buffers</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MB:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 258</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Cached</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MB:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 347</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Sort:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Order:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ascending</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      UID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      CMD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">              HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     MISSES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   DIRTIES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  READ_HIT%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  WRITE_HIT%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   13029</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     python</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">                  1</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">       0.0%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>cachetop 默认会按照缓存的命中次数（HITS）排序，展示了每个进程的缓存命中情况。字段含义和 cachestat 一样；READ_HIT 和 WRITE_HIT 分别表示读和写的缓存命中率。</p><h4 id="_2-pcstat" tabindex="-1"><a class="header-anchor" href="#_2-pcstat"><span>2. pcstat</span></a></h4><p>安装（ x86_64 系统）： <code>curl -L -o pcstat https://github.com/tobert/pcstat/raw/2014-05-02-01/pcstat.x86_64</code></p><p>作用：查看文件在内存中的缓存大小以及缓存比例</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/usr/local] pcstat /bin/perf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Size</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pages</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Cached</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Percent</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> /bin/perf</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 7068944</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">        |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 1726</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">         |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 000.000</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/usr/local] perf top</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/usr/local] pcstat /bin/perf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Size</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pages</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Cached</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Percent</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> /bin/perf</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 7068944</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">        |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 1726</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">       |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 1726</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 100.000</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">-----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，Cached 就是 /bin/perf 在缓存中的大小，Percent 则是缓存的百分比。如果为 0 表示不在缓存中；之后我们使用了 perf 命令，就会发现 perf 已经在缓存中</p><h3 id="二、案例场景" tabindex="-1"><a class="header-anchor" href="#二、案例场景"><span>二、案例场景</span></a></h3><h4 id="_1-文件被缓存前和缓存后的读取速度" tabindex="-1"><a class="header-anchor" href="#_1-文件被缓存前和缓存后的读取速度"><span>1. 文件被缓存前和缓存后的读取速度</span></a></h4><ul><li><p>使用 dd 命令生成一个临时文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 生成一个512MB的临时文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> if=/dev/sda1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> of=file</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bs=1M</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> count=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">512</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 清理缓存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /proc/sys/vm/drop_caches</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行 pcstat ，确认刚刚生成的文件不在缓存中。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/tmp] pcstat file </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Size</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pages</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Cached</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Percent</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 536870912</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 131072</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">         |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 000.000</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行 <code>cachetop 5</code> 命令每 5 秒刷新一次数据</p></li><li><p>在其他终端运行 dd 命令测试文件的读取速度。可以看到，这个文件的读取性能是 123 MB/s，由于 dd 命令运行之前我们清理了缓存，因此 dd 命令在读取数据时，肯定要通过文件系统从磁盘中读取。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/tmp] dd </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> of</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/dev/null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">1M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">512+0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> records</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> in</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">512+0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> records</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> out</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">536870912</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (537 </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">MB</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) copied, 4.37107 s, 123 MB/s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>回去看一下 <code>cachetop</code> 的终端，查看进程缓存命中情况。并不是所有的读都落到了磁盘，读请求的缓存命中率只有 50%</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      UID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      CMD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">              HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     MISSES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   DIRTIES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  READ_HIT%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  WRITE_HIT%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">\\.\\.\\.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    3264</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     dd</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">                  37077</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    37330</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      49.8%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      50.2%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>此时看一下 <code>pcstat file</code> ，这个文件已经全部缓存在内存中</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/tmp] pcstat file </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Size</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">           |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Pages</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Cached</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Percent</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 536870912</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">      |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 131072</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 131072</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> 100.000</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">----------+----------------+------------+-----------+---------</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>再次执行 dd 命令，可以看到读性能变成了 6.6 GB/s 。说明是从缓存中读取的。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  [/tmp] dd </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> of</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/dev/null</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> bs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">1M</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">512+0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> records</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> in</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">512+0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> records</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> out</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">536870912</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (537 </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">MB</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) copied, 0.0808783 s, 6.6 GB/s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在看一下 cachetop 的终端，读的缓存命中率是 100%，也就是说这次的 dd 命令全部命中了缓存，所以性能特别高</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">10:45:22</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Buffers</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MB:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Cached</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MB:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 719</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Sort:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Order:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ascending</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      UID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      CMD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">              HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     MISSES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   DIRTIES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  READ_HIT%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  WRITE_HIT%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">\\.\\.\\.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   32642</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     dd</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">                 131637</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">       0.0%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>结论：系统缓存对第二次 dd 操作有明显的加速效果，可以大大提高文件读取的性能。但是同时也要注意如果用 dd 当成测试文件系统性能的工具，由于缓存的存在，会导致测试结果严重失真，每次 dd 的时候需要先清理缓存 <code>echo 3 &gt; /proc/sys/vm/drop_caches</code></p><h4 id="_2-使用-direct-io" tabindex="-1"><a class="header-anchor" href="#_2-使用-direct-io"><span>2. 使用 direct IO</span></a></h4><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> flags </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> O_RDONLY </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> O_LARGEFILE </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> O_DIRECT; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> fd </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">disk</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> flags</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">755</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如上打开文件的方式使用了直接 IO，这样会绕过系统的缓存。我们可以观察 cachetop 中某个进程命中的次数</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">16:39:18</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Buffers</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MB:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 73</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Cached</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MB:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 281</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Sort:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Order:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ascending</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      UID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">      CMD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">              HITS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     MISSES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   DIRTIES</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  READ_HIT%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  WRITE_HIT%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">   21881</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     app</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">                  1024</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">        0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">     100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">       0.0%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上所示，HITS 为 1024，说明缓存的命中次数为 1024，每次命中会读取一页，内存以页为单位进行管理，而每个页的大小是 4KB。假如整个读取过程是 5 秒，因此，在 5 秒的时间间隔里，命中的缓存为 <code>1024 * 4K = 4MB</code> ，再除 5 秒，可以得到每秒读的缓存是 0.8 MB。</p><p>接下来，可以使用 strace 来看下程序执行过程中系统调用来确认程序的那部分出现问题。</p><p><strong>注意：cachetop 工具并不把直接 IO 算进来，因此如果使用直接 IO 的话，不会看到大量数据的未命中情况</strong></p><p><strong>注意：直接 IO 是跳过 buffer，裸 IO 是跳过文件系统（还是有 buffer 的）</strong></p><p><strong>注意：如上使用直接 IO，但还是有 100% 缓存命中率，因为还有元数据缓存</strong></p>`,32)]))}const d=i(n,[["render",k],["__file","8.缓存命中率.html.vue"]]),r=JSON.parse('{"path":"/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/8.%E7%BC%93%E5%AD%98%E5%91%BD%E4%B8%AD%E7%8E%87.html","title":"8.缓存命中率","lang":"zh-CN","frontmatter":{"title":"8.缓存命中率","date":"2023-01-19T11:11:41.000Z","tags":["linux"],"description":"缓存命中率 这里的缓存指的是数据在内存中的临时存储 缓存命中率：指直接通过缓存获取数据的请求次数，占所有数据请求次数的百分比。命中率越高，表示使用缓存带来的收益越高，应用程序的性能也就越好 一、工具介绍 1. cachestat 和 cachetop cachestat：提供了整个操作系统缓存的读写命中情况 cachetop：提供了每个进程的缓存命中情...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/%E5%86%85%E6%A0%B8%E5%8E%9F%E7%90%86/8.%E7%BC%93%E5%AD%98%E5%91%BD%E4%B8%AD%E7%8E%87.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"8.缓存命中率"}],["meta",{"property":"og:description","content":"缓存命中率 这里的缓存指的是数据在内存中的临时存储 缓存命中率：指直接通过缓存获取数据的请求次数，占所有数据请求次数的百分比。命中率越高，表示使用缓存带来的收益越高，应用程序的性能也就越好 一、工具介绍 1. cachestat 和 cachetop cachestat：提供了整个操作系统缓存的读写命中情况 cachetop：提供了每个进程的缓存命中情..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:published_time","content":"2023-01-19T11:11:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8.缓存命中率\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-19T11:11:41.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"缓存命中率","slug":"缓存命中率","link":"#缓存命中率","children":[{"level":3,"title":"一、工具介绍","slug":"一、工具介绍","link":"#一、工具介绍","children":[]},{"level":3,"title":"二、案例场景","slug":"二、案例场景","link":"#二、案例场景","children":[]}]}],"git":{},"readingTime":{"minutes":4.7,"words":1411},"filePathRelative":"操作系统/内存管理/内核原理/8.缓存命中率.md","localizedDate":"2023年1月19日","excerpt":"<h2>缓存命中率</h2>\\n<p>这里的缓存指的是数据在内存中的临时存储</p>\\n<p>缓存命中率：指直接通过缓存获取数据的请求次数，占所有数据请求次数的百分比。命中率越高，表示使用缓存带来的收益越高，应用程序的性能也就越好</p>\\n<h3>一、工具介绍</h3>\\n<h4>1. cachestat 和 cachetop</h4>\\n<ul>\\n<li>cachestat：提供了整个操作系统缓存的读写命中情况</li>\\n<li>cachetop：提供了每个进程的缓存命中情况</li>\\n</ul>\\n<p>这两个工具都是 bbc 软件包的一部分，基于 Linux 内核的 eBPF（extended Berkeley Packet Filters）机制，来跟踪内核中管理的缓存，并输出缓存的使用和命中情况。bbc-tools 需要内核为 4.1 或者更新的版本。</p>","autoDesc":true}');export{d as comp,r as data};
