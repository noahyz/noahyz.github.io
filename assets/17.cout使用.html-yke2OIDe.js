import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as t,o as a}from"./app-D1zlwylF.js";const i={};function l(d,s){return a(),n("div",null,s[0]||(s[0]=[t(`<p>C / C++ 保留两位小数（setprecision(n)的一些用法总结）<br><a href="https://blog.csdn.net/qq_36667170/article/details/79265224" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_36667170/article/details/79265224</a></p><h4 id="_1-c-设置浮点数精度" tabindex="-1"><a class="header-anchor" href="#_1-c-设置浮点数精度"><span>1. c++ 设置浮点数精度</span></a></h4><p>如下，有三种方法</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>// 1</span></span>
<span class="line"><span>// std::cout &lt;&lt; std::setiosflags(std::ios::fixed) &lt;&lt; std::setprecision(2);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 2 </span></span>
<span class="line"><span>// std::cout.setf(std::ios::fixed);</span></span>
<span class="line"><span>// std::cout &lt;&lt; std::setprecision(3);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 3</span></span>
<span class="line"><span>std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(4);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在 C++ 中，设置完精度之后，永久生效</li><li>按照四舍五入的方式修改了数字的显示方法，并不是修改原数字</li></ul><h4 id="_2-c-语言设置浮点数精度" tabindex="-1"><a class="header-anchor" href="#_2-c-语言设置浮点数精度"><span>2. c 语言设置浮点数精度</span></a></h4><p>格式化 <code>%f</code> 输出浮点型数据，在 % 之后加上 <code>.n</code> 即可。默认保留六位小数</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>printf(&quot;%.3f \\n&quot;, pi);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_3-输出二进制、八进制" tabindex="-1"><a class="header-anchor" href="#_3-输出二进制、八进制"><span>3. 输出二进制、八进制</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>int a = 2149580819;</span></span>
<span class="line"><span>cout &lt;&lt; &quot;八进制： &quot; &lt;&lt; oct &lt;&lt; a &lt;&lt; endl;</span></span>
<span class="line"><span>cout &lt;&lt; &quot;十进制： &quot; &lt;&lt; dec &lt;&lt; a &lt;&lt; endl;</span></span>
<span class="line"><span>cout &lt;&lt; &quot;十六进制： &quot; &lt;&lt; hex &lt;&lt; a &lt;&lt; endl;</span></span>
<span class="line"><span>cout &lt;&lt; &quot;二进制： &quot; &lt;&lt; bitset&lt;sizeof(a)*8&gt;(a) &lt;&lt; endl;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const r=e(i,[["render",l],["__file","17.cout使用.html.vue"]]),o=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/17.cout%E4%BD%BF%E7%94%A8.html","title":"17.cout使用","lang":"zh-CN","frontmatter":{"title":"17.cout使用","date":"2023-01-19T11:11:41.000Z","tags":["linux"],"description":"C / C++ 保留两位小数（setprecision(n)的一些用法总结） https://blog.csdn.net/qq_36667170/article/details/79265224 1. c++ 设置浮点数精度 如下，有三种方法 在 C++ 中，设置完精度之后，永久生效 按照四舍五入的方式修改了数字的显示方法，并不是修改原数字 2. c ...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/c__%E8%AF%AD%E8%A8%80/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/17.cout%E4%BD%BF%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"17.cout使用"}],["meta",{"property":"og:description","content":"C / C++ 保留两位小数（setprecision(n)的一些用法总结） https://blog.csdn.net/qq_36667170/article/details/79265224 1. c++ 设置浮点数精度 如下，有三种方法 在 C++ 中，设置完精度之后，永久生效 按照四舍五入的方式修改了数字的显示方法，并不是修改原数字 2. c ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:published_time","content":"2023-01-19T11:11:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"17.cout使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-19T11:11:41.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"编程语言/c++语言/基础语法/17.cout使用.md","localizedDate":"2023年1月19日","excerpt":"<p>C / C++ 保留两位小数（setprecision(n)的一些用法总结）<br>\\n<a href=\\"https://blog.csdn.net/qq_36667170/article/details/79265224\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://blog.csdn.net/qq_36667170/article/details/79265224</a></p>\\n<h4>1. c++ 设置浮点数精度</h4>\\n<p>如下，有三种方法</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>// 1</span></span>\\n<span class=\\"line\\"><span>// std::cout &lt;&lt; std::setiosflags(std::ios::fixed) &lt;&lt; std::setprecision(2);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>// 2 </span></span>\\n<span class=\\"line\\"><span>// std::cout.setf(std::ios::fixed);</span></span>\\n<span class=\\"line\\"><span>// std::cout &lt;&lt; std::setprecision(3);</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>// 3</span></span>\\n<span class=\\"line\\"><span>std::cout &lt;&lt; std::fixed &lt;&lt; std::setprecision(4);</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,o as data};
