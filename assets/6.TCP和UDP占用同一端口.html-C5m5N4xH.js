import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as p,o as P}from"./app-D1zlwylF.js";const a={};function n(o,t){return P(),r("div",null,t[0]||(t[0]=[p('<h2 id="tcp-udp-占用同一端口" tabindex="-1"><a class="header-anchor" href="#tcp-udp-占用同一端口"><span>TCP/UDP 占用同一端口</span></a></h2><p>TCP/UDP 可以共用同一个端口<br> 1、tcp的端口不是物理概念，仅仅是协议栈中的两个字节<br> 2、TCP和UDP的端口完全没有任何关系，完全有可能又有一种XXP基于IP，也有端口的概念，这是完全可能的。<br> 3、TCP和UDP传输协议监听同一个端口后，接收数据互不影响，不冲突。因为数据接收时时根据五元组{传输协议，源IP，目的IP，源端口，目的端口}判断接受者的。</p><h4 id="端口是什么" tabindex="-1"><a class="header-anchor" href="#端口是什么"><span>端口是什么</span></a></h4><p>端口是一种抽象的软件结构（包括一些数据结构和I/O缓冲区）。<br> 应用程序（即进程）通过系统调用与某端口建立连接（binding）后，传输层传给该端口的数据都被相应进程所接收，相应进程发给传输层的数据都通过该端口输出。在TCP/IP协议的实现中，端口操作类似于一般的I/O操作，进程获取一个端口，相当于获取本地唯一的I/O文件，可以用一般的读写原语访问之。<br> 类似于文件描述符，每个端口都拥有一个叫端口号（port number）的整数型标识符，用于区别不同端口。由于TCP/IP传输层的两个协议TCP和UDP是完全独立的两个软件模块，因此各自的端口号也相互独立，如TCP有一个255号端口，UDP也可以有一个255号端口，二者并不冲突。</p><h4 id="一个端口可以建立多少连接" tabindex="-1"><a class="header-anchor" href="#一个端口可以建立多少连接"><span>一个端口可以建立多少连接</span></a></h4><p>一个TCP连接需要由四元组来形成，即(src_ip,src_port,dst_ip,dst_port)。假设有客户端建立了连接(src_ip1,src_port1,dst_ip1,dst_port1)，那么，如果我们还有listen在(src_ip1,src_port1)，那么当(dst_ip1,dst_port1)发送消息过来，系统应该把消息给谁？所以就说明了客户端占用了某一端口时，该端口就不能被其它进程listen了。<br> 那么，对于有些童鞋，可能还有这样的疑问，是否一台机器就只能建立65535个连接了（端口16位限制）？非也，一个连接由四元组(src_ip,src_port,dst_ip,dst_port)形式，那么当(src_ip,src_port)一定时，变化的(dst_ip,dst_port)就可以建立更多连接了。<br> 所以一台机器可以建立最多65535个连接是大错特错的。所有的一切都可以用四元组原理来分析即：一个TCP连接需要由四元组来形成，即(src_ip,src_port,dst_ip,dst_port),只要四个元素的组合中有一个元素不一样，那就可以区别不同的连接。</p><h4 id="ftp端口的占用" tabindex="-1"><a class="header-anchor" href="#ftp端口的占用"><span>ftp端口的占用</span></a></h4><p>FTP服务器有两个端口，其中21端口用于连接，20端口用于传输数据.<br> 进行FTP文件传输中，客户端首先连接到FTP服务器的21端口，进行用户的认证，认证成功后，要传输文件时，服务器会开一个端口为20来进行传输数据文件。<br> 也就是说，端口20才是真正传输所用到的端口，端口21只用于FTP的登陆认证。我们平常下载文件时，会遇到下载到99%时，文件不完成，不能成功的下载。其实是因为文件下载完毕后，还要在21端口再行进行用户认证，而下载文件的时间如果过长，客户机与服务器的21端口的连接会被服务器认为是超时连接而中断掉，就是这个原因。解决方法就是设置21端口的响应时间。</p>',8)]))}const c=e(a,[["render",n],["__file","6.TCP和UDP占用同一端口.html.vue"]]),E=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E4%BC%A0%E8%BE%93%E5%B1%82/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/6.TCP%E5%92%8CUDP%E5%8D%A0%E7%94%A8%E5%90%8C%E4%B8%80%E7%AB%AF%E5%8F%A3.html","title":"6.TCP和UDP占用同一端口","lang":"zh-CN","frontmatter":{"title":"6.TCP和UDP占用同一端口","date":"2021-03-07T21:54:54.000Z","tags":["端口"],"description":"TCP/UDP 占用同一端口 TCP/UDP 可以共用同一个端口 1、tcp的端口不是物理概念，仅仅是协议栈中的两个字节 2、TCP和UDP的端口完全没有任何关系，完全有可能又有一种XXP基于IP，也有端口的概念，这是完全可能的。 3、TCP和UDP传输协议监听同一个端口后，接收数据互不影响，不冲突。因为数据接收时时根据五元组{传输协议，源IP，目的I...","head":[["meta",{"property":"og:url","content":"https://noahyz.github.io/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/%E4%BC%A0%E8%BE%93%E5%B1%82/%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86/6.TCP%E5%92%8CUDP%E5%8D%A0%E7%94%A8%E5%90%8C%E4%B8%80%E7%AB%AF%E5%8F%A3.html"}],["meta",{"property":"og:site_name","content":"noahyz的博客"}],["meta",{"property":"og:title","content":"6.TCP和UDP占用同一端口"}],["meta",{"property":"og:description","content":"TCP/UDP 占用同一端口 TCP/UDP 可以共用同一个端口 1、tcp的端口不是物理概念，仅仅是协议栈中的两个字节 2、TCP和UDP的端口完全没有任何关系，完全有可能又有一种XXP基于IP，也有端口的概念，这是完全可能的。 3、TCP和UDP传输协议监听同一个端口后，接收数据互不影响，不冲突。因为数据接收时时根据五元组{传输协议，源IP，目的I..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"noahyz"}],["meta",{"property":"article:tag","content":"端口"}],["meta",{"property":"article:published_time","content":"2021-03-07T21:54:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"6.TCP和UDP占用同一端口\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-07T21:54:54.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"noahyz\\",\\"url\\":\\"/about-the-author/\\"}]}"]]},"headers":[{"level":2,"title":"TCP/UDP 占用同一端口","slug":"tcp-udp-占用同一端口","link":"#tcp-udp-占用同一端口","children":[]}],"git":{},"readingTime":{"minutes":3.12,"words":935},"filePathRelative":"计算机网络/七层模型/传输层/技术原理/6.TCP和UDP占用同一端口.md","localizedDate":"2021年3月8日","excerpt":"<h2>TCP/UDP 占用同一端口</h2>\\n<p>TCP/UDP 可以共用同一个端口<br>\\n1、tcp的端口不是物理概念，仅仅是协议栈中的两个字节<br>\\n2、TCP和UDP的端口完全没有任何关系，完全有可能又有一种XXP基于IP，也有端口的概念，这是完全可能的。<br>\\n3、TCP和UDP传输协议监听同一个端口后，接收数据互不影响，不冲突。因为数据接收时时根据五元组{传输协议，源IP，目的IP，源端口，目的端口}判断接受者的。</p>\\n<h4>端口是什么</h4>\\n<p>端口是一种抽象的软件结构（包括一些数据结构和I/O缓冲区）。<br>\\n应用程序（即进程）通过系统调用与某端口建立连接（binding）后，传输层传给该端口的数据都被相应进程所接收，相应进程发给传输层的数据都通过该端口输出。在TCP/IP协议的实现中，端口操作类似于一般的I/O操作，进程获取一个端口，相当于获取本地唯一的I/O文件，可以用一般的读写原语访问之。<br>\\n类似于文件描述符，每个端口都拥有一个叫端口号（port number）的整数型标识符，用于区别不同端口。由于TCP/IP传输层的两个协议TCP和UDP是完全独立的两个软件模块，因此各自的端口号也相互独立，如TCP有一个255号端口，UDP也可以有一个255号端口，二者并不冲突。</p>","autoDesc":true}');export{c as comp,E as data};
